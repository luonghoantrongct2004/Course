@model Course
@using EduCourse.Entities
@using Microsoft.AspNetCore.Identity
@inject UserManager<User> UserManager
@{
    var user = UserManager.GetUserAsync(User).Result;
}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
<style>
    .form-step {
        display: none;
    }

        .form-step:first-of-type {
            display: block; /* Show the first step initially */
        }

    button.next-step, button.prev-step {
        margin: 10px;
    }

    /* General styles for the chapter and lesson cards */
    .card {
        border: 1px solid #ddd;
        border-radius: 8px;
        padding: 16px;
        margin-bottom: 16px;
        background-color: #f9f9f9;
        display: flex;
        flex-direction: column;
    }

        /* Style for the chapter title and inputs */
        .card h4 {
            margin-bottom: 8px;
            padding-left: 10px; /* Indentation for chapter titles */
        }

    /* Style for the chapter content */
    .card-content {
        display: flex;
        flex-direction: column;
    }

        /* Align the add lesson button next to the chapter title input */
        .card-content .button-container {
            display: flex;
            align-items: center;
            margin-top: 8px;
        }

            .card-content .button-container button {
                margin-left: 8px;
            }

    /* Style for lesson cards inside chapters */
    .lessons-container .card {
        margin-left: 30px; /* Indentation for lesson cards */
    }

    /* Optional: Styling for buttons and input fields */
    button {
        cursor: pointer;
        transition: background-color 0.3s;
    }

        button:hover {
            background-color: #4a90e2; /* Adjust based on your design */
        }

    .lesson-form {
        margin-bottom: 15px;
        margin-left: 20px; /* Khoảng cách thụt lùi từ lề trái */
        padding: 10px;
        border: 1px solid #ddd; /* Đường viền nhẹ */
        border-radius: 4px;
        background-color: #f9f9f9; /* Màu nền nhẹ */
        box-shadow: 0 2px 4px rgba(0,0,0,0.1); /* Đổ bóng nhẹ */
    }

    .form-input {
        width: 100%;
        padding: 8px;
        margin-bottom: 8px;
        border: 1px solid #ccc;
        border-radius: 4px;
    }
</style>

<style>
    .swal-custom-popup {
        background-color: #a52effa3;
        color: black;
    }

    .swal-custom-title {
        color: black;
    }

    .swal-custom-confirm, .swal-custom-cancel {
        background-color: #ffffffd9;
        color: #000000;
    }

        .swal-custom-confirm:hover, .swal-custom-cancel:hover {
            background-color: #ebebeb;
            color: black;
        }

</style>
   <!-- write your code here-->
<div class="p-6">
    <div class="flex flex-col justify-between gap-5 mb-6 sm:flex-row">
        <div>
            <h3 class="mb-1 text-xl font-semibold leading-6 text-slate-800">
                Thêm khóa học
            </h3>
            <p class="text-sm text-slate-600">
                Thêm khóa học mới cho ngày
            </p>
        </div>
        <div>
            <a href="/admin/course"
               class="flex items-center px-4 py-3 text-sm text-white rounded-lg shadow-xs gap bg-primary">
                <svg width="24"
                     height="24"
                     viewBox="0 0 24 24"
                     fill="none"
                     xmlns="http://www.w3.org/2000/svg">
                    <path d="M19 11H9L12.29 7.71C12.3837 7.61704 12.4581 7.50644 12.5089 7.38458C12.5597 7.26272 12.5858 7.13201 12.5858 7C12.5858 6.86799 12.5597 6.73728 12.5089 6.61542C12.4581 6.49356 12.3837 6.38296 12.29 6.29C12.1026 6.10375 11.8492 5.99921 11.585 5.99921C11.3208 5.99921 11.0674 6.10375 10.88 6.29L6.59 10.59C6.21441 10.9633 6.00223 11.4704 6 12C6.00487 12.5261 6.21684 13.0291 6.59 13.4L10.88 17.7C10.9732 17.7926 11.0838 17.8659 11.2054 17.9157C11.3269 17.9656 11.4571 17.991 11.5885 17.9906C11.7199 17.9901 11.8499 17.9638 11.9712 17.913C12.0924 17.8623 12.2024 17.7882 12.295 17.695C12.3876 17.6018 12.4609 17.4912 12.5107 17.3696C12.5606 17.2481 12.586 17.1179 12.5856 16.9865C12.5851 16.8551 12.5588 16.7251 12.508 16.6038C12.4573 16.4826 12.3832 16.3726 12.29 16.28L9 13H19C19.2652 13 19.5196 12.8946 19.7071 12.7071C19.8946 12.5196 20 12.2652 20 12C20 11.7348 19.8946 11.4804 19.7071 11.2929C19.5196 11.1054 19.2652 11 19 11Z"
                          fill="currentColor" />
                </svg>
                Trở về
            </a>
        </div>
    </div>
    <div class="p-5 bg-white rounded-lg">
        <form id="courseForm" enctype="multipart/form-data">
            <input type="hidden" asp-for="AuthorID" value="@user.Id" />
            <div id="step-1" class="form-step">
            <div class="grid grid-cols-1 gap-5 lg:grid-cols-2">
                <div class="border-b border-slate-200 col-span-full">
                    <h3 class="mb-2 text-xl font-semibold leading-6 text-mainblack">
                        Thông tin khóa học
                    </h3>
                        <span asp-validation-summary="All" class="text-red"></span>
                </div>
                <div class="col-span-full">
                    <label for="Title"
                           class="block mb-2 text-sm font-medium leading-6 text-mainblack">Tên khóa học *</label>
                    <input type="text"
                           asp-for="Title"
                           class="w-full px-4 py-2 text-sm border rounded-lg text-mainblack placeholder:text-sm focus:ring-0 focus:border-primary h-11 border-slate-200 placeholder:text-slate-600"
                           placeholder="Tên cho khóa học" />
                </div>
                <!-- Editor -->
                <div class="col-span-full">
                    <div class="flex flex-col justify-between gap-3 mb-2 sm:items-center sm:flex-row">
                        <label for="Description"
                               class="block text-sm font-medium leading-6 text-mainblack">Mô tả khóa học *</label>
                    </div>
                    <input type="text"
                           asp-for="Description"
                           style="height: 100px;"
                           class="w-full px-4 py-2 text-sm border rounded-lg text-mainblack placeholder:text-sm focus:ring-0 focus:border-primary h-11 border-slate-200 placeholder:text-slate-600"
                           placeholder="Mô tả cho khóa học" />
                </div>
                <div class="border-b border-slate-200 col-span-full">
                    <h3 class="mb-2 text-xl font-semibold leading-6 text-mainblack">
                        Hình ảnh & Video
                    </h3>
                </div>
                <div class="col-span-full">
                    <div class="flex flex-col gap-6 sm:flex-row">
                        <div>
                                <label id="img-upload"
                                       class="flex flex-col items-center px-10 py-8 transition border border-dashed rounded-lg cursor-pointer border-slate-200 hover:bg-violet-100 hover:border-primary">
                                    <svg width="24"
                                         height="24"
                                         viewBox="0 0 24 24"
                                         fill="none"
                                         xmlns="http://www.w3.org/2000/svg">
                                        <path fill-rule="evenodd"
                                              clip-rule="evenodd"
                                              d="M19.0003 1.25098C19.4145 1.25098 19.7503 1.58676 19.7503 2.00098V6.19032L20.4699 5.47065C20.7628 5.17775 21.2377 5.17775 21.5306 5.47065C21.8235 5.76354 21.8235 6.23841 21.5306 6.53131L20.2377 7.8242C19.5543 8.50762 18.4462 8.50762 17.7628 7.8242L16.4699 6.53131C16.177 6.23841 16.177 5.76354 16.4699 5.47065C16.7628 5.17775 17.2377 5.17775 17.5306 5.47065L18.2503 6.19032V2.00098C18.2503 1.58676 18.586 1.25098 19.0003 1.25098ZM2.75037 6.00132C2.75037 4.2064 4.20544 2.75132 6.00037 2.75132H15.0004C15.4146 2.75132 15.7504 2.41553 15.7504 2.00132C15.7504 1.58711 15.4146 1.25132 15.0004 1.25132H6.00037C3.37701 1.25132 1.25037 3.37797 1.25037 6.00132V18.0013C1.25037 20.6247 3.37701 22.7513 6.00037 22.7513H18.0004C20.6237 22.7513 22.7504 20.6247 22.7504 18.0013V10.0013C22.7504 9.58711 22.4146 9.25132 22.0004 9.25132C21.5862 9.25132 21.2504 9.58711 21.2504 10.0013V13.5014L17.926 11.2852C16.8063 10.5387 15.3155 10.6864 14.3639 11.6379L9.63684 16.365C8.68531 17.3165 7.19444 17.4641 6.07479 16.7177L2.75037 14.5014V6.00132ZM8.50026 11.001C9.88097 11.001 11.0003 9.88168 11.0003 8.50097C11.0003 7.12025 9.88097 6.00097 8.50026 6.00097C7.11954 6.00097 6.00026 7.12025 6.00026 8.50097C6.00026 9.88168 7.11954 11.001 8.50026 11.001Z"
                                              fill="#475569" />
                                    </svg>
                                    <input type="file" name="file" id="img-upload-input" class="hidden" accept=".jpg,.jpeg,.png" />
                                    <p class="mt-2 text-sm font-medium text-slate-600">
                                        <span class="underline text-primary">Nhấn vào để upload</span>
                                        <br />
                                        hoặc kéo & thả
                                    </p>
                                </label>
                        </div>
                        <div>
                            <label id="img-upload"
                                   class="flex flex-col items-center px-10 py-8 transition border border-dashed rounded-lg cursor-pointer border-slate-200 hover:bg-violet-100 hover:border-primary">

                                <img id="img-preview" class="mt-4 hidden" alt="Image preview" style="height: 170px;width: 300px;" />
                            </label>
                        </div>
                    </div>
                </div>
                <div class="col-span-full">
                    <label asp-for="CategoryID" class="block mb-2 text-sm font-medium leading-6 text-mainblack">
                        Thể loại *
                    </label>
                    <select id="category" asp-for="CategoryID" asp-items="@(ViewData["Categories"] as SelectList)"
                            class="w-full px-4 py-2 text-sm border rounded-lg form-select text-mainblack placeholder:text-sm focus:ring-0 focus:border-primary h-11 border-slate-200 placeholder:text-slate-600">
                    </select>

                </div>
                <div class="border-b border-slate-200 col-span-full">
                    <h3 class="flex items-center gap-3 mb-2 text-xl font-semibold leading-6 text-mainblack">
                        Giá
                        <svg width="20"
                             height="20"
                             viewBox="0 0 20 20"
                             fill="none"
                             xmlns="http://www.w3.org/2000/svg">
                            <g clip-path="url(#clip0_137_10934)">
                                <path d="M11.4026 8.40098L12.0333 8.80683V8.80682L11.4026 8.40098ZM7.58329 7.50033C7.58329 7.91454 7.91908 8.25033 8.33329 8.25033C8.74751 8.25033 9.08329 7.91454 9.08329 7.50033H7.58329ZM9.24996 11.2503C9.24996 11.6645 9.58575 12.0003 9.99996 12.0003C10.4142 12.0003 10.75 11.6645 10.75 11.2503H9.24996ZM10.75 13.3337C10.75 12.9194 10.4142 12.5837 9.99996 12.5837C9.58575 12.5837 9.24996 12.9194 9.24996 13.3337H10.75ZM9.24996 14.167C9.24996 14.5812 9.58575 14.917 9.99996 14.917C10.4142 14.917 10.75 14.5812 10.75 14.167H9.24996ZM17.5833 10.0003C17.5833 14.1885 14.1881 17.5837 9.99996 17.5837V19.0837C15.0165 19.0837 19.0833 15.0169 19.0833 10.0003H17.5833ZM9.99996 17.5837C5.8118 17.5837 2.41663 14.1885 2.41663 10.0003H0.916626C0.916626 15.0169 4.98337 19.0837 9.99996 19.0837V17.5837ZM2.41663 10.0003C2.41663 5.81217 5.8118 2.41699 9.99996 2.41699V0.916992C4.98337 0.916992 0.916626 4.98374 0.916626 10.0003H2.41663ZM9.99996 2.41699C14.1881 2.41699 17.5833 5.81217 17.5833 10.0003H19.0833C19.0833 4.98374 15.0165 0.916992 9.99996 0.916992V2.41699ZM10.9166 7.50033C10.9166 7.68393 10.8634 7.85282 10.7718 7.99514L12.0333 8.80682C12.2759 8.42971 12.4166 7.9803 12.4166 7.50033H10.9166ZM9.08329 7.50033C9.08329 6.99406 9.4937 6.58366 9.99996 6.58366V5.08366C8.66527 5.08366 7.58329 6.16564 7.58329 7.50033H9.08329ZM9.99996 6.58366C10.5062 6.58366 10.9166 6.99406 10.9166 7.50033H12.4166C12.4166 6.16564 11.3346 5.08366 9.99996 5.08366V6.58366ZM9.24996 10.8337V11.2503H10.75V10.8337H9.24996ZM10.7718 7.99514C10.6708 8.15214 10.5432 8.31637 10.3889 8.50804C10.2426 8.68995 10.0661 8.9039 9.90802 9.12116C9.59715 9.54841 9.24996 10.1264 9.24996 10.8337H10.75C10.75 10.6204 10.855 10.3691 11.1209 10.0037C11.2512 9.82459 11.3943 9.65133 11.5576 9.44838C11.7131 9.25518 11.8852 9.03686 12.0333 8.80683L10.7718 7.99514ZM9.24996 13.3337V14.167H10.75V13.3337H9.24996Z"
                                      fill="#475569" />
                            </g>
                            <defs>
                                <clipPath id="clip0_137_10934">
                                    <rect width="20" height="20" fill="white" />
                                </clipPath>
                            </defs>
                        </svg>
                    </h3>
                </div>
                <div class="col-span-1">
                    <label for="Price"
                           class="block mb-2 text-sm font-medium leading-6 text-mainblack">Giá gốc *</label>
                    <div class="flex rounded-md">
                        <span class="inline-flex items-center px-4 text-sm border border-r-0 rounded-l-lg text-slate-500 border-slate-200 sm:text-base">VND</span>
                        <input type="number"
                               asp-for="Price"
                               class="block w-full min-w-0 flex-1 rounded-none rounded-r-lg border py-1.5 text-mainblack ring-0 focus:border-primary focus:ring-0 fo h-11 border-slate-200 placeholder:text-slate-600" />
                    </div>
                </div>
                <div class="col-span-1">
                    <label for="discount"
                           class="flex items-center gap-1 mb-2 text-sm font-medium leading-6 text-mainblack">
                        Giảm giá
                        <svg width="17"
                             height="16"
                             viewBox="0 0 17 16"
                             fill="none"
                             xmlns="http://www.w3.org/2000/svg">
                            <path opacity="0.2"
                                  d="M8.49992 14.6663C12.1818 14.6663 15.1666 11.6816 15.1666 7.99967C15.1666 4.31778 12.1818 1.33301 8.49992 1.33301C4.81802 1.33301 1.83325 4.31778 1.83325 7.99967C1.83325 11.6816 4.81802 14.6663 8.49992 14.6663Z"
                                  fill="#8247FF" />
                            <path d="M8.5 9.16634C8.77333 9.16634 9 8.93967 9 8.66634V5.33301C9 5.05967 8.77333 4.83301 8.5 4.83301C8.22667 4.83301 8 5.05967 8 5.33301V8.66634C8 8.93967 8.22667 9.16634 8.5 9.16634Z"
                                  fill="#8247FF" />
                            <path d="M9.11325 10.4129C9.07992 10.3329 9.03325 10.2596 8.97325 10.1929C8.90659 10.1329 8.83325 10.0863 8.75325 10.0529C8.59325 9.98626 8.40659 9.98626 8.24659 10.0529C8.16659 10.0863 8.09325 10.1329 8.02659 10.1929C7.96659 10.2596 7.91992 10.3329 7.88659 10.4129C7.85325 10.4929 7.83325 10.5796 7.83325 10.6663C7.83325 10.7529 7.85325 10.8396 7.88659 10.9196C7.91992 11.0063 7.96659 11.0729 8.02659 11.1396C8.09325 11.1996 8.16659 11.2463 8.24659 11.2796C8.32659 11.3129 8.41325 11.3329 8.49992 11.3329C8.58659 11.3329 8.67325 11.3129 8.75325 11.2796C8.83325 11.2463 8.90659 11.1996 8.97325 11.1396C9.03325 11.0729 9.07992 11.0063 9.11325 10.9196C9.14659 10.8396 9.16659 10.7529 9.16659 10.6663C9.16659 10.5796 9.14659 10.4929 9.11325 10.4129Z"
                                  fill="#8247FF" />
                        </svg>
                    </label>
                    <div class="flex rounded-md">
                        <span class="inline-flex items-center px-4 text-sm border border-r-0 rounded-l-lg text-slate-500 border-slate-200 sm:text-base">%</span>
                        <input type="text"
                                asp-for="Discount"
                                class="block w-full min-w-0 flex-1 text-sm rounded-none rounded-r-lg border py-1.5 text-mainblack ring-0 focus:border-primary focus:ring-0 fo h-11 border-slate-200 placeholder:text-slate-600"/>
                    </div>
                </div>
                    <div class="flex flex-col gap-4 mt-6 sm:flex-row">
                        <button type="button" onclick="prevStep(2)" class="px-12 py-3 text-sm font-medium leading-6 text-center text-white transition border rounded-lg hover:bg-opacity-80 bg-primary sm:text-base">
                            Tiếp theo
                        </button>
                    </div>
            </div>
            </div>
            <div id="step-2" class="form-step" style="display: none;">
                <h3 class="mb-2 text-xl font-semibold leading-6 text-mainblack">Thông tin chương</h3>
                <button type="button" onclick="addChapter()" class="px-12 py-3 text-sm font-medium leading-6 text-center text-white transition border rounded-lg hover:bg-opacity-80 bg-primary sm:text-base">
                    Thêm chương
                </button>
                <div id="chaptersContainer" class="mt-4">
                </div>
                <div class="flex flex-col gap-4 mt-6 sm:flex-row">
                    <button type="button" onclick="prevStep(1)" class="px-12 py-3 text-sm font-medium leading-6 text-center text-red-500 border border-red-200 rounded-lg sm:text-base">
                        Quay lại
                    </button>
                    <button type="submit" class="submit-button px-12 py-3 text-sm font-medium leading-6 text-center text-white transition border rounded-lg hover:bg-opacity-80 bg-primary sm:text-base">
                        Thêm khóa học
                    </button>
                </div>
            </div>
            <script>
                document.getElementById('courseForm').addEventListener('submit', function (e) {
                    e.preventDefault(); // Ngăn chặn việc gửi biểu mẫu theo cách truyền thống

                    // Hiển thị hộp thoại xác nhận bằng SweetAlert
                    Swal.fire({
                        title: 'Bạn có chắc chắn muốn tạo khóa học?',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonText: 'Có, tạo nó!',
                        cancelButtonText: 'Không, hủy!',
                        reverseButtons: true,
                        customClass: {
                            popup: 'swal-custom-popup',
                            title: 'swal-custom-title',
                            confirmButton: 'swal-custom-confirm',
                            cancelButton: 'swal-custom-cancel'
                        }
                    }).then((result) => {
                        if (result.isConfirmed) {
                            // Nếu được xác nhận, tiếp tục gửi biểu mẫu
                            const formData = new FormData(this);

                            fetch('/Admin/Course/Create', {
                                method: 'POST',
                                body: formData
                            })
                                .then(response => response.json())
                                .then(data => {
                                    if (data.success) {
                                        Swal.fire({
                                            title: 'Thành công!',
                                            text: data.message,
                                            icon: 'success',
                                            confirmButtonText: 'OK',
                                            customClass: {
                                                confirmButton: 'swal-custom-confirm'
                                            }
                                        }).then(() => {
                                            window.location.href = '/Admin/Course'; // Điều hướng sau khi thành công
                                        });
                                    } else {
                                        Swal.fire({
                                            title: 'Lỗi!',
                                            text: data.message,
                                            icon: 'error',
                                            confirmButtonText: 'OK',
                                            customClass: {
                                                confirmButton: 'swal-custom-confirm'
                                            }
                                        });
                                    }
                                })
                                .catch(error => {
                                    console.error('Error:', error);
                                    Swal.fire({
                                        title: 'Lỗi!',
                                        text: 'Đã xảy ra lỗi bất ngờ.',
                                        icon: 'error',
                                        confirmButtonText: 'OK',
                                        customClass: {
                                            confirmButton: 'swal-custom-confirm'
                                        }
                                    });
                                });
                        } else if (result.dismiss === Swal.DismissReason.cancel) {
                            Swal.fire(
                                'Đã hủy',
                                'Khóa học chưa được tạo.',
                                'error'
                            );
                        }
                    });
                });
            </script>
            <script>
                let chapterCount = 0;

                function nextStep(currentStep) {
                    document.getElementById(`step-${currentStep}`).style.display = 'none';
                    document.getElementById(`step-${currentStep + 1}`).style.display = 'block';
                }

                function prevStep(currentStep) {
                    document.getElementById(`step-${currentStep}`).style.display = 'none';
                    document.getElementById(`step-${currentStep - 1}`).style.display = 'block';
                }

                function addChapter() {
                    chapterCount++;
                    const chapterContainer = document.getElementById('chaptersContainer');
                    const chapterCard = document.createElement('div');
                    chapterCard.classList.add('chapter-form');
                    chapterCard.setAttribute('id', `chapter-form-${chapterCount}`); // Added an ID for the chapter
                    chapterCard.innerHTML = `
                        <div class="col-span-full">
                            <div class="flex justify-between items-center">
                                <h4>Chương ${chapterCount}</h4>
                                <div>
                                    <button type="button" onclick="toggleChapter(${chapterCount})" class="ml-2">
                                        <i id="icon-${chapterCount}" class="fas fa-chevron-up"></i>
                                    </button>
                                    <button type="button" onclick="deleteChapter(${chapterCount})" class="ml-2 text-red-600">
                                        <i class="fas fa-trash-alt"></i>
                                    </button>
                                </div>
                            </div>
                            <div id="chapter-${chapterCount}" style="display: block;">
                                <input type="hidden" name="Chapters[${chapterCount - 1}].Index" value="${chapterCount - 1}" />
                                <label for="ChapterTitle-${chapterCount}" class="block mb-2 text-sm font-medium leading-6 text-mainblack">Tên chương *</label>
                                <input type="text" id="ChapterTitle-${chapterCount}" name="Chapters[${chapterCount - 1}].Title" class="w-full px-4 py-2 text-sm border rounded-lg text-mainblack placeholder:text-sm focus:ring-0 focus:border-primary h-11 border-slate-200 placeholder:text-slate-600" placeholder="Tên chương" />
                                <div class="button-container mt-4">
                                    <button type="button" onclick="addLesson(${chapterCount - 1})" class="px-12 py-3 text-sm font-medium leading-6 text-center text-white transition border rounded-lg hover:bg-opacity-80 bg-primary sm:text-base">
                                        Thêm bài học
                                    </button>
                                </div>
                                <div id="lessonsContainer-${chapterCount - 1}" class="lessons-container mt-4">
                                    <!-- Lesson cards will be dynamically added here -->
                                </div>
                            </div>
                        </div>
                    `;

                    chapterContainer.appendChild(chapterCard);
                }

                function deleteChapter(chapterIndex) {
                    const confirmed = confirm("Bạn có chắc chắn muốn xóa chương này không?");
                    if (confirmed) {
                        const chapterCard = document.getElementById(`chapter-form-${chapterIndex}`);
                        chapterCard.remove();
                    }
                }

                function addLesson(chapterIndex) {
                    const lessonContainer = document.getElementById(`lessonsContainer-${chapterIndex}`);
                    const lessonIndex = lessonContainer.children.length;
                    const lessonCard = document.createElement('div');
                    lessonCard.classList.add('lesson-form');
                    lessonCard.setAttribute('id', `lesson-form-${chapterIndex}-${lessonIndex}`); // Added an ID for the lesson
                    lessonCard.innerHTML = `
                        <div class="col-span-full">
                            <div class="flex justify-between items-center">
                                <label for="LessonTitle-${chapterIndex}-${lessonIndex + 1}" class="block mb-2 text-sm font-medium leading-6 text-mainblack">Tên bài học</label>
                                <div>
                                    <button type="button" onclick="toggleLesson(${chapterIndex}, ${lessonIndex})" class="ml-2">
                                        <i id="lesson-icon-${chapterIndex}-${lessonIndex}" class="fas fa-chevron-up"></i>
                                    </button>
                                    <button type="button" onclick="deleteLesson(${chapterIndex}, ${lessonIndex})" class="ml-2 text-red-600">
                                        <i class="fas fa-trash-alt"></i>
                                    </button>
                                </div>
                            </div>
                            <div id="lesson-${chapterIndex}-${lessonIndex}" style="display: block;">
                                <input type="hidden" name="Chapters[${chapterIndex}].Lessons[${lessonIndex}].Index" value="${lessonIndex}" />
                                <input type="text" id="LessonTitle-${chapterIndex}-${lessonIndex + 1}" name="Chapters[${chapterIndex}].Lessons[${lessonIndex}].Title" class="w-full px-4 py-2 text-sm border rounded-lg text-mainblack placeholder:text-sm focus:ring-0 focus:border-primary h-11 border-slate-200 placeholder:text-slate-600" placeholder="Tên bài học" />
                                <label for="LessonDescription-${chapterIndex}-${lessonIndex + 1}" class="block mt-4 mb-2 text-sm font-medium leading-6 text-mainblack">Mô tả bài học</label>
                                <input type="text" id="LessonDescription-${chapterIndex}-${lessonIndex + 1}" name="Chapters[${chapterIndex}].Lessons[${lessonIndex}].Description" class="w-full px-4 py-2 text-sm border rounded-lg text-mainblack placeholder:text-sm focus:ring-0 focus:border-primary h-11 border-slate-200 placeholder:text-slate-600" placeholder="Mô tả bài học" />
                                <label for="LessonVideoFile-${chapterIndex}-${lessonIndex + 1}" class="block mt-4 mb-2 text-sm font-medium leading-6 text-mainblack">Chọn Video</label>
                                <input type="file" id="LessonVideoFile-${chapterIndex}-${lessonIndex + 1}" name="Chapters[${chapterIndex}].Lessons[${lessonIndex}].VideoFile" class="w-full px-4 py-2 text-sm border rounded-lg text-mainblack placeholder:text-sm focus:ring-0 focus:border-primary h-11 border-slate-200 placeholder:text-slate-600" accept=".mp4" required=""/>
                                <label for="LessonContentType-${chapterIndex}-${lessonIndex + 1}" class="block mt-4 mb-2 text-sm font-medium leading-6 text-mainblack">Loại nội dung</label>
                                <select id="LessonContentType-${chapterIndex}-${lessonIndex + 1}" name="Chapters[${chapterIndex}].Lessons[${lessonIndex}].ContentType" class="w-full px-4 py-2 text-sm border rounded-lg text-mainblack placeholder:text-sm focus:ring-0 focus:border-primary h-11 border-slate-200 placeholder:text-slate-600">
                                    <option value="Video">Video</option>
                                    <option value="PDF">PDF</option>
                                    <option value="Text">Text</option>
                                    <option value="Audio">Audio</option>
                                </select>
                                <div class="questions-container mt-4">
                                    <button type="button" onclick="addQuestion(${chapterIndex}, ${lessonIndex})" class="px-12 py-3 text-sm font-medium leading-6 text-center text-white transition border rounded-lg hover:bg-opacity-80 bg-primary sm:text-base">
                                        Thêm câu hỏi
                                    </button>
                                    <div id="questionsContainer-${chapterIndex}-${lessonIndex}" class="questions-container mt-4">
                                        <!-- Question cards will be dynamically added here -->
                                    </div>
                                </div>
                            </div>
                        </div>
                    `;

                    lessonContainer.appendChild(lessonCard);
                }

                function deleteLesson(chapterIndex, lessonIndex) {
                    const confirmed = confirm("Bạn có chắc chắn muốn xóa bài học này không?");
                    if (confirmed) {
                        const lessonCard = document.getElementById(`lesson-form-${chapterIndex}-${lessonIndex}`);
                        lessonCard.remove();
                    }
                }

                function toggleChapter(index) {
                    const chapterDiv = document.getElementById(`chapter-${index}`);
                    const icon = document.getElementById(`icon-${index}`);

                    if (chapterDiv.style.display === 'none') {
                        chapterDiv.style.display = 'block';
                        icon.className = 'fas fa-chevron-up'; // Up arrow icon
                    } else {
                        chapterDiv.style.display = 'none';
                        icon.className = 'fas fa-chevron-down'; // Down arrow icon
                    }
                }

                function toggleLesson(chapterIndex, lessonIndex) {
                    const lessonDiv = document.getElementById(`lesson-${chapterIndex}-${lessonIndex}`);
                    const icon = document.getElementById(`lesson-icon-${chapterIndex}-${lessonIndex}`);

                    if (lessonDiv.style.display === 'none') {
                        lessonDiv.style.display = 'block';
                        icon.className = 'fas fa-chevron-up'; // Up arrow icon
                    } else {
                        lessonDiv.style.display = 'none';
                        icon.className = 'fas fa-chevron-down'; // Down arrow icon
                    }
                }

                function addQuestion(chapterIndex, lessonIndex) {
                    const questionsContainer = document.getElementById(`questionsContainer-${chapterIndex}-${lessonIndex}`);
                    const questionIndex = questionsContainer.children.length;

                    const questionCard = document.createElement('div');
                    questionCard.classList.add('question-form');
                    questionCard.setAttribute('id', `question-form-${chapterIndex}-${lessonIndex}-${questionIndex}`);
                    questionCard.innerHTML = `
                        <div class="col-span-full">
                            <div class="flex justify-between items-center">
                                <label for="QuestionContent-${chapterIndex}-${lessonIndex}-${questionIndex}" class="block mb-2 text-sm font-medium leading-6 text-mainblack">Nội dung câu hỏi</label>
                                <div>
                                    <button type="button" onclick="toggleQuestion(${chapterIndex}, ${lessonIndex}, ${questionIndex})" class="ml-2">
                                        <i id="question-icon-${chapterIndex}-${lessonIndex}-${questionIndex}" class="fas fa-chevron-up"></i>
                                    </button>
                                    <button type="button" onclick="deleteQuestion(${chapterIndex}, ${lessonIndex}, ${questionIndex})" class="ml-2 text-red-600">
                                        <i class="fas fa-trash-alt"></i>
                                    </button>
                                </div>
                            </div>
                            <div id="question-${chapterIndex}-${lessonIndex}-${questionIndex}" style="display: block;">
                                <input type="text" id="QuestionContent-${chapterIndex}-${lessonIndex}-${questionIndex}" name="Chapters[${chapterIndex}].Lessons[${lessonIndex}].Questions[${questionIndex}].Content" class="w-full px-4 py-2 text-sm border rounded-lg text-mainblack placeholder:text-sm focus:ring-0 focus:border-primary h-11 border-slate-200 placeholder:text-slate-600" placeholder="Nội dung câu hỏi" />

                                <label for="QuestionShowTime-${chapterIndex}-${lessonIndex}-${questionIndex}" class="block mt-4 mb-2 text-sm font-medium leading-6 text-mainblack">Thời gian hiển thị (giây)</label>
                                <input type="number" id="QuestionShowTime-${chapterIndex}-${lessonIndex}-${questionIndex}" name="Chapters[${chapterIndex}].Lessons[${lessonIndex}].Questions[${questionIndex}].ShowTime" class="w-full px-4 py-2 text-sm border rounded-lg text-mainblack placeholder:text-sm focus:ring-0 focus:border-primary h-11 border-slate-200 placeholder:text-slate-600" placeholder="Nhập số giây" />

                                <label for="QuestionType-${chapterIndex}-${lessonIndex}-${questionIndex}" class="block mt-4 mb-2 text-sm font-medium leading-6 text-mainblack">Loại câu hỏi</label>
                                <select id="QuestionType-${chapterIndex}-${lessonIndex}-${questionIndex}" name="Chapters[${chapterIndex}].Lessons[${lessonIndex}].Questions[${questionIndex}].QuestionType" class="w-full px-4 py-2 text-sm border rounded-lg text-mainblack placeholder:text-sm focus:ring-0 focus:border-primary h-11 border-slate-200 placeholder:text-slate-600" onchange="handleQuestionTypeChange(${chapterIndex}, ${lessonIndex}, ${questionIndex})">
                                    <option value="Single Choice">1 đáp án đúng</option>
                                    <option value="Multiple Choice">Nhiều đáp án đúng</option>
                                    <option value="Keyword">Từ khóa đúng</option>
                                </select>

                                <!-- Container for answer options -->
                                <div id="answersContainer-${chapterIndex}-${lessonIndex}-${questionIndex}" class="answers-container mt-4">
                                    <!-- Answer options will be dynamically added here -->
                                </div>
                                <button type="button" onclick="addAnswerOption(${chapterIndex}, ${lessonIndex}, ${questionIndex})" class="mt-2 px-4 py-2 text-sm font-medium leading-6 text-center text-white transition border rounded-lg hover:bg-opacity-80 bg-primary sm:text-base">
                                    Thêm đáp án
                                </button>
                            </div>
                        </div>
                    `;

                    questionsContainer.appendChild(questionCard);
                }
                function handleQuestionTypeChange(chapterIndex, lessonIndex, questionIndex) {
                    const questionType = document.getElementById(`QuestionType-${chapterIndex}-${lessonIndex}-${questionIndex}`).value;
                    const answersContainer = document.getElementById(`answersContainer-${chapterIndex}-${lessonIndex}-${questionIndex}`);

                    // Clear existing answers when the question type changes
                    answersContainer.innerHTML = '';

                    // If Single Choice or Multiple Choice, allow adding options
                    if (questionType === 'Single Choice' || questionType === 'Multiple Choice') {
                        addAnswerOption(chapterIndex, lessonIndex, questionIndex, questionType);
                    } else if (questionType === 'Keyword') {
                        addKeywordField(chapterIndex, lessonIndex, questionIndex);
                    }
                }

                function addAnswerOption(chapterIndex, lessonIndex, questionIndex, questionType) {
                    const answersContainer = document.getElementById(`answersContainer-${chapterIndex}-${lessonIndex}-${questionIndex}`);
                    const answerIndex = answersContainer.children.length;

                    const inputType = questionType === 'Single Choice' ? 'radio' : 'checkbox';

                    const answerOption = document.createElement('div');
                    answerOption.classList.add('answer-option');
                    answerOption.setAttribute('id', `answer-option-${chapterIndex}-${lessonIndex}-${questionIndex}-${answerIndex}`);
                    answerOption.innerHTML = `
                        <div class="flex items-center">
                            <input type="text" id="AnswerContent-${chapterIndex}-${lessonIndex}-${questionIndex}-${answerIndex}" name="Chapters[${chapterIndex}].Lessons[${lessonIndex}].Questions[${questionIndex}].Options[${answerIndex}].Content" class="w-full px-4 py-2 text-sm border rounded-lg text-mainblack placeholder:text-sm focus:ring-0 focus:border-primary h-11 border-slate-200 placeholder:text-slate-600" placeholder="Nhập đáp án" />
                            <input type="${inputType}" name="Chapters[${chapterIndex}].Lessons[${lessonIndex}].Questions[${questionIndex}].Options[${answerIndex}].IsCorrect" value="true" class="ml-2">
                            <button type="button" onclick="deleteAnswerOption(${chapterIndex}, ${lessonIndex}, ${questionIndex}, ${answerIndex})" class="ml-2 text-red-600">
                                <i class="fas fa-trash-alt"></i>
                            </button>
                        </div>
                    `;

                    answersContainer.appendChild(answerOption);
                }


                function deleteAnswerOption(chapterIndex, lessonIndex, questionIndex, answerIndex) {
                    const confirmed = confirm("Bạn có chắc chắn muốn xóa đáp án này không?");
                    if (confirmed) {
                        const answerOption = document.getElementById(`answer-option-${chapterIndex}-${lessonIndex}-${questionIndex}-${answerIndex}`);
                        answerOption.remove();
                    }
                }

                function addKeywordField(chapterIndex, lessonIndex, questionIndex) {
                    const answersContainer = document.getElementById(`answersContainer-${chapterIndex}-${lessonIndex}-${questionIndex}`);

                    const keywordField = document.createElement('div');
                    keywordField.classList.add('keyword-field');
                    keywordField.innerHTML = `
                        <label for="KeywordAnswer-${chapterIndex}-${lessonIndex}-${questionIndex}" class="block mb-2 text-sm font-medium leading-6 text-mainblack">Nhập từ khóa đúng</label>
                        <input type="text" id="KeywordAnswer-${chapterIndex}-${lessonIndex}-${questionIndex}" name="Chapters[${chapterIndex}].Lessons[${lessonIndex}].Questions[${questionIndex}].CorrectAnswer" class="w-full px-4 py-2 text-sm border rounded-lg text-mainblack placeholder:text-sm focus:ring-0 focus:border-primary h-11 border-slate-200 placeholder:text-slate-600" placeholder="Nhập từ khóa" />
                    `;

                    answersContainer.appendChild(keywordField);
                }


                function deleteQuestion(chapterIndex, lessonIndex, questionIndex) {
                    const confirmed = confirm("Bạn có chắc chắn muốn xóa câu hỏi này không?");
                    if (confirmed) {
                        const questionCard = document.getElementById(`question-form-${chapterIndex}-${lessonIndex}-${questionIndex}`);
                        questionCard.remove();
                    }
                }

                function toggleQuestion(chapterIndex, lessonIndex, questionIndex) {
                    const questionDiv = document.getElementById(`question-${chapterIndex}-${lessonIndex}-${questionIndex}`);
                    const icon = document.getElementById(`question-icon-${chapterIndex}-${lessonIndex}-${questionIndex}`);

                    if (questionDiv.style.display === 'none') {
                        questionDiv.style.display = 'block';
                        icon.className = 'fas fa-chevron-up';
                    } else {
                        questionDiv.style.display = 'none';
                        icon.className = 'fas fa-chevron-down';
                    }
                }

            </script>

        </form>
    </div>
</div>
<!-- write your code here-->
<script>
    function nextStep(step) {
        // Hide current step
        const currentStep = document.querySelector('.form-step:not([style*="display: none"])');
        if (currentStep) {
            currentStep.style.display = 'none';
        }

        // Show next step
        document.getElementById('step-' + step).style.display = 'block';
    }

    function prevStep(step) {
        // Hide current step
        const currentStep = document.querySelector('.form-step:not([style*="display: none"])');
        if (currentStep) {
            currentStep.style.display = 'none';
        }

        // Show previous step
        document.getElementById('step-' + step).style.display = 'block';
    }

</script>


<script>
    const imgInput = document.getElementById('img-upload-input');
    const imgPreview = document.getElementById('img-preview');

    imgInput.addEventListener('change', function () {
        const file = this.files[0];
        if (file) {
            const reader = new FileReader();
            reader.onload = function (e) {
                imgPreview.src = e.target.result;
                imgPreview.classList.remove('hidden');
            };
            reader.readAsDataURL(file);
        }
    });
    function validateFileInput() {
        var fileInput = document.getElementById('img-upload-input');

        if (!fileInput.value) {
            alert('Vui lòng chọn một tệp hình ảnh trước khi gửi.');
            return false; // Ngăn việc submit form
        }

        return true; // Cho phép submit form
    }

</script>
