@model Course
<style>
    .form-step {
        display: none;
    }

        .form-step:first-of-type {
            display: block; /* Show the first step initially */
        }

    button.next-step, button.prev-step {
        margin: 10px;
    }

    /* General styles for the chapter and lesson cards */
    .card {
        border: 1px solid #ddd;
        border-radius: 8px;
        padding: 16px;
        margin-bottom: 16px;
        background-color: #f9f9f9;
        display: flex;
        flex-direction: column;
    }

        /* Style for the chapter title and inputs */
        .card h4 {
            margin-bottom: 8px;
            padding-left: 10px; /* Indentation for chapter titles */
        }

    /* Style for the chapter content */
    .card-content {
        display: flex;
        flex-direction: column;
    }

        /* Align the add lesson button next to the chapter title input */
        .card-content .button-container {
            display: flex;
            align-items: center;
            margin-top: 8px;
        }

            .card-content .button-container button {
                margin-left: 8px;
            }

    /* Style for lesson cards inside chapters */
    .lessons-container .card {
        margin-left: 30px; /* Indentation for lesson cards */
    }

    /* Optional: Styling for buttons and input fields */
    button {
        cursor: pointer;
        transition: background-color 0.3s;
    }

        button:hover {
            background-color: #4a90e2; /* Adjust based on your design */
        }

    .lesson-form {
        margin-bottom: 15px;
        margin-left: 20px; /* Khoảng cách thụt lùi từ lề trái */
        padding: 10px;
        border: 1px solid #ddd; /* Đường viền nhẹ */
        border-radius: 4px;
        background-color: #f9f9f9; /* Màu nền nhẹ */
        box-shadow: 0 2px 4px rgba(0,0,0,0.1); /* Đổ bóng nhẹ */
    }

    .form-input {
        width: 100%;
        padding: 8px;
        margin-bottom: 8px;
        border: 1px solid #ccc;
        border-radius: 4px;
    }
</style>

<style>
    .swal-custom-popup {
        background-color: #a52effa3;
        color: black;
    }

    .swal-custom-title {
        color: black;
    }

    .swal-custom-confirm, .swal-custom-cancel {
        background-color: #ffffffd9;
        color: #000000;
    }

        .swal-custom-confirm:hover, .swal-custom-cancel:hover {
            background-color: #ebebeb;
            color: black;
        }

</style>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
<!-- write your code here-->
<div class="p-6">
    <div class="flex flex-col justify-between gap-5 mb-6 sm:flex-row">
        <div>
            <h3 class="mb-1 text-xl font-semibold leading-6 text-slate-800">
                Chỉnh sửa khóa học
            </h3>
        </div>
        <div>
            <a href="/admin/course"
               class="flex items-center px-4 py-3 text-sm text-white rounded-lg shadow-xs gap bg-primary">
                <svg width="24"
                     height="24"
                     viewBox="0 0 24 24"
                     fill="none"
                     xmlns="http://www.w3.org/2000/svg">
                    <path d="M19 11H9L12.29 7.71C12.3837 7.61704 12.4581 7.50644 12.5089 7.38458C12.5597 7.26272 12.5858 7.13201 12.5858 7C12.5858 6.86799 12.5597 6.73728 12.5089 6.61542C12.4581 6.49356 12.3837 6.38296 12.29 6.29C12.1026 6.10375 11.8492 5.99921 11.585 5.99921C11.3208 5.99921 11.0674 6.10375 10.88 6.29L6.59 10.59C6.21441 10.9633 6.00223 11.4704 6 12C6.00487 12.5261 6.21684 13.0291 6.59 13.4L10.88 17.7C10.9732 17.7926 11.0838 17.8659 11.2054 17.9157C11.3269 17.9656 11.4571 17.991 11.5885 17.9906C11.7199 17.9901 11.8499 17.9638 11.9712 17.913C12.0924 17.8623 12.2024 17.7882 12.295 17.695C12.3876 17.6018 12.4609 17.4912 12.5107 17.3696C12.5606 17.2481 12.586 17.1179 12.5856 16.9865C12.5851 16.8551 12.5588 16.7251 12.508 16.6038C12.4573 16.4826 12.3832 16.3726 12.29 16.28L9 13H19C19.2652 13 19.5196 12.8946 19.7071 12.7071C19.8946 12.5196 20 12.2652 20 12C20 11.7348 19.8946 11.4804 19.7071 11.2929C19.5196 11.1054 19.2652 11 19 11Z"
                          fill="currentColor" />
                </svg>
                Trở về
            </a>
        </div>
    </div>
    <div class="p-5 bg-white rounded-lg">
        <form id="courseForm" action="/Admin/Course/Edit" method="post" enctype="multipart/form-data">
            <input type="hidden" asp-for="CourseID" />
            <input type="hidden" asp-for="AuthorID" />
            <div id="step-1" class="form-step">
                <div class="grid grid-cols-1 gap-5 lg:grid-cols-2">
                    <div class="border-b border-slate-200 col-span-full">
                        <h3 class="mb-2 text-xl font-semibold leading-6 text-mainblack">
                            Thông tin khóa học
                        </h3>
                        <span asp-validation-summary="All" class="text-red"></span>
                    </div>
                    <div class="col-span-full">
                        <label for="Title"
                               class="block mb-2 text-sm font-medium leading-6 text-mainblack">Tên khóa học *</label>
                        <input type="text"
                               asp-for="Title"
                               class="w-full px-4 py-2 text-sm border rounded-lg text-mainblack placeholder:text-sm focus:ring-0 focus:border-primary h-11 border-slate-200 placeholder:text-slate-600"
                               placeholder="Tên cho khóa học" />
                    </div>
                    <!-- Editor -->
                    <div class="col-span-full">
                        <div class="flex flex-col justify-between gap-3 mb-2 sm:items-center sm:flex-row">
                            <label for="Description"
                                   class="block text-sm font-medium leading-6 text-mainblack">Mô tả khóa học *</label>
                        </div>
                        <input type="text"
                               asp-for="Description"
                               style="height: 100px;"
                               class="w-full px-4 py-2 text-sm border rounded-lg text-mainblack placeholder:text-sm focus:ring-0 focus:border-primary h-11 border-slate-200 placeholder:text-slate-600"
                               placeholder="Mô tả cho khóa học" />
                    </div>
                    <div class="border-b border-slate-200 col-span-full">
                        <h3 class="mb-2 text-xl font-semibold leading-6 text-mainblack">
                            Hình ảnh & Video
                        </h3>
                    </div>
                    <div class="col-span-full">
                        <div class="flex flex-col gap-6 sm:flex-row">
                            <div>
                                <label id="img-upload"
                                       class="flex flex-col items-center px-10 py-8 transition border border-dashed rounded-lg cursor-pointer border-slate-200 hover:bg-violet-100 hover:border-primary">

                                    <input type="file" name="file" id="img-upload-input" class="hidden" accept="image/*" />
                                    <p class="mt-2 text-sm font-medium text-slate-600">
                                        <span class="underline text-primary">Nhấn vào để upload</span>
                                        <br />
                                        hoặc kéo & thả
                                    </p>
                                    @if (!string.IsNullOrEmpty(Model.Image))
                                    {
                                        <img asp-for="Image" src="@Model.Image" alt="Current Image" style="height: 170px; width: 300px;" />
                                    }
                                </label>
                            </div>
                            <div>
                                <label id="img-upload"
                                       class="flex flex-col items-center px-10 py-8 transition border border-dashed rounded-lg cursor-pointer border-slate-200 hover:bg-violet-100 hover:border-primary">

                                    <img id="img-preview" class="mt-4 hidden" alt="Image preview" style="height: 170px;width: 300px;" />
                                </label>
                            </div>
                        </div>
                    </div>
                    <div class="col-span-full">
                        <label asp-for="CategoryID" class="block mb-2 text-sm font-medium leading-6 text-mainblack">
                            Thể loại *
                        </label>
                        <select id="category" asp-for="CategoryID" asp-items="@(ViewData["Categories"] as SelectList)"
                                class="w-full px-4 py-2 text-sm border rounded-lg form-select text-mainblack placeholder:text-sm focus:ring-0 focus:border-primary h-11 border-slate-200 placeholder:text-slate-600">
                        </select>

                    </div>
                    <div class="border-b border-slate-200 col-span-full">
                        <h3 class="flex items-center gap-3 mb-2 text-xl font-semibold leading-6 text-mainblack">
                            Giá
                        </h3>
                    </div>
                    <div class="col-span-1">
                        <label for="Price"
                               class="block mb-2 text-sm font-medium leading-6 text-mainblack">Giá gốc *</label>
                        <div class="flex rounded-md">
                            <span class="inline-flex items-center px-4 text-sm border border-r-0 rounded-l-lg text-slate-500 border-slate-200 sm:text-base">VND</span>
                            <input type="number"
                                   asp-for="Price"
                                   class="block w-full min-w-0 flex-1 rounded-none rounded-r-lg border py-1.5 text-mainblack ring-0 focus:border-primary focus:ring-0 fo h-11 border-slate-200 placeholder:text-slate-600" />
                        </div>
                    </div>
                    <div class="col-span-1">
                        <label for="discount"
                               class="flex items-center gap-1 mb-2 text-sm font-medium leading-6 text-mainblack">
                            Giảm giá
                        </label>
                        <div class="flex rounded-md">
                            <span class="inline-flex items-center px-4 text-sm border border-r-0 rounded-l-lg text-slate-500 border-slate-200 sm:text-base">%</span>
                            <input type="text"
                                   asp-for="Discount"
                                   class="block w-full min-w-0 flex-1 text-sm rounded-none rounded-r-lg border py-1.5 text-mainblack ring-0 focus:border-primary focus:ring-0 fo h-11 border-slate-200 placeholder:text-slate-600" />
                        </div>
                    </div>
                    <div class="flex flex-col gap-4 mt-6 sm:flex-row">
                        <button type="button" onclick="prevStep(2)" class="px-12 py-3 text-sm font-medium leading-6 text-center text-white transition border rounded-lg hover:bg-opacity-80 bg-primary sm:text-base">
                            Tiếp theo
                        </button>
                    </div>
                </div>
            </div>
            <div id="step-2" class="form-step" style="display: none;">
                <h3 class="mb-2 text-xl font-semibold leading-6 text-mainblack">Thông tin chương</h3>
                <button type="button" onclick="addChapter()" class="px-12 py-3 text-sm font-medium leading-6 text-center text-white transition border rounded-lg hover:bg-opacity-80 bg-primary sm:text-base">
                    Thêm chương
                </button>
                <div id="chaptersContainer" class="mt-4">
                    @for (int i = 0; i < Model.Chapters.Count; i++)
                    {
                        var chapter = Model.Chapters.ElementAt(i);
                        <div class="chapter-form" id="chapter-form-@(i)">
                            <div class="col-span-full">
                                <h4 class="cursor-pointer mb-2 text-sm font-medium leading-6 text-mainblack" style="display: flex; justify-content: space-between; align-items: center;">
                                    Chương @(i + 1)
                                    <div>
                                        <button type="button" onclick="toggleChapter(@i)" class="ml-2">
                                            <i id="icon-@(i)" class="fas fa-chevron-up"></i>
                                        </button>
                                        <button type="button" onclick="deleteChapter(@i, @chapter.ChapterID)" class="ml-2 text-red-600">
                                            <i class="fas fa-trash-alt"></i>
                                        </button>
                                    </div>
                                </h4>
                                <div id="chapter-@(i)" style="display: block;">
                                    <input type="hidden" name="Chapters[@i].ChapterID" value="@chapter.ChapterID" />
                                    <input type="hidden" name="Chapters[@i].CourseID" value="@Model.CourseID" />
                                    <input type="hidden" name="Chapters[@i].Index" value="@i" />
                                    <label for="ChapterTitle-@(i + 1)" class="block mb-2 text-sm font-medium leading-6 text-mainblack">Tên chương *</label>
                                    <input type="text" id="ChapterTitle-@(i + 1)" name="Chapters[@i].Title" value="@chapter.Title"
                                           class="w-full px-4 py-2 text-sm border rounded-lg text-mainblack placeholder:text-sm focus:ring-0 focus:border-primary h-11 border-slate-200 placeholder:text-slate-600"
                                           placeholder="Tên chương" />
                                    <div class="button-container mt-4">
                                        <button type="button" onclick="addLesson(@i)" class="px-12 py-3 text-sm font-medium leading-6 text-center text-white transition border rounded-lg hover:bg-opacity-80 bg-primary sm:text-base">
                                            Thêm bài học
                                        </button>
                                    </div>
                                    <div id="lessonsContainer-@i" class="lessons-container mt-4">
                                        @for (int j = 0; j < chapter.Lessons.Count; j++)
                                        {
                                            var lesson = chapter.Lessons.ElementAt(j);
                                            <div class="lesson-form" id="lesson-form-@(i)-@(j)">
                                                <div class="flex justify-between items-center">
                                                    <label for="LessonTitle-@(i)-@(j + 1)" class="block mb-2 text-sm font-medium leading-6 text-mainblack">Tên bài học</label>
                                                    <div>
                                                        <button type="button" onclick="toggleLesson(@i, @j)" class="ml-2">
                                                            <i id="lesson-icon-@(i)-@(j)" class="fas fa-chevron-up"></i>
                                                        </button>
                                                        <button type="button" onclick="deleteLesson(@i, @j, @lesson.LessonID)" class="ml-2 text-red-600">
                                                            <i class="fas fa-trash-alt"></i>
                                                        </button>
                                                    </div>
                                                </div>
                                                <div id="lesson-@(i)-@(j)" style="display: block;">
                                                    <input type="hidden" name="Chapters[@i].Lessons[@j].LessonID" value="@lesson.LessonID" />
                                                    <input type="hidden" name="Chapters[@i].Lessons[@j].ChapterID" value="@lesson.ChapterID" />
                                                    <input type="hidden" name="Chapters[@i].Lessons[@j].Index" value="@j" />

                                                    <!-- Duration field (hidden) -->
                                                    <input type="hidden" name="Chapters[@i].Lessons[@j].Duration" value="@lesson.Duration" />
                                                    <input type="hidden" name="Chapters[@i].Lessons[@j].VideoURL" value="@lesson.VideoURL" />

                                                    <label for="LessonTitle-@(i)-@(j + 1)" class="block mb-2 text-sm font-medium leading-6 text-mainblack">Tên bài học</label>
                                                    <input type="text" id="LessonTitle-@(i)-@(j + 1)" name="Chapters[@i].Lessons[@j].Title" value="@lesson.Title"
                                                           class="w-full px-4 py-2 text-sm border rounded-lg text-mainblack placeholder:text-sm focus:ring-0 focus:border-primary h-11 border-slate-200 placeholder:text-slate-600"
                                                           placeholder="Tên bài học" />
                                                    <label for="LessonDescription-@(i)-@(j + 1)" class="block mt-4 mb-2 text-sm font-medium leading-6 text-mainblack">Mô tả bài học</label>
                                                    <input type="text" id="LessonDescription-@(i)-@(j + 1)" name="Chapters[@i].Lessons[@j].Description" value="@lesson.Description"
                                                           class="w-full px-4 py-2 text-sm border rounded-lg text-mainblack placeholder:text-sm focus:ring-0 focus:border-primary h-11 border-slate-200 placeholder:text-slate-600"
                                                           placeholder="Mô tả bài học" />
                                                    <label for="LessonVideoFile-@(i)-@(j + 1)" class="block mt-4 mb-2 text-sm font-medium leading-6 text-mainblack">Chọn Video</label>
                                                    <input type="file" id="LessonVideoFile-@(i)-@(j + 1)" name="Chapters[@i].Lessons[@j].VideoFile"
                                                           class="w-full px-4 py-2 text-sm border rounded-lg text-mainblack placeholder:text-sm focus:ring-0 focus:border-primary h-11 border-slate-200 placeholder:text-slate-600" />
                                                    @if (!string.IsNullOrEmpty(lesson.VideoURL))
                                                    {
                                                        <video name="Chapters[@i].Lessons[@j].VideoURL" id="LessonVideo-@(i)-@(j + 1)" width="300" height="170" controls>
                                                            <source id="LessonVideoSource-@(i)-@(j + 1)" src="@lesson.VideoURL" type="video/mp4">
                                                            Trình duyệt của bạn không hỗ trợ video.
                                                        </video>
                                                    }
                                                    <label for="LessonContentType-@(i)-@(j + 1)" class="block mt-4 mb-2 text-sm font-medium leading-6 text-mainblack">Loại nội dung</label>
                                                    <select id="LessonContentType-@(i)-@(j + 1)" name="Chapters[@i].Lessons[@j].ContentType"
                                                            class="w-full px-4 py-2 text-sm border rounded-lg text-mainblack placeholder:text-sm focus:ring-0 focus:border-primary h-11 border-slate-200 placeholder:text-slate-600">
                                                        <option value="Video">Video</option>
                                                    </select>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                </div>
                <div class="flex flex-col gap-4 mt-6 sm:flex-row">
                    <button type="button" onclick="prevStep(1)" class="px-12 py-3 text-sm font-medium leading-6 text-center text-red-500 border border-red-200 rounded-lg sm:text-base">
                        Quay lại
                    </button>
                    <button type="submit" class="px-12 py-3 text-sm font-medium leading-6 text-center text-white transition border rounded-lg hover:bg-opacity-80 bg-primary sm:text-base">
                        Cập nhật khóa học
                    </button>
                </div>
            </div>

        </form>
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
        <script>
            function toggleChapter(index) {
                const chapterDiv = document.getElementById(`chapter-${index}`);
                const icon = document.getElementById(`icon-${index}`);

                if (chapterDiv.style.display === 'none' || chapterDiv.style.display === '') {
                    chapterDiv.style.display = 'block';
                    icon.className = 'fas fa-chevron-up'; // Up arrow icon
                } else {
                    chapterDiv.style.display = 'none';
                    icon.className = 'fas fa-chevron-down'; // Down arrow icon
                }
            }

            function toggleLesson(chapterIndex, lessonIndex) {
                const lessonDiv = document.getElementById(`lesson-${chapterIndex}-${lessonIndex}`);
                const icon = document.getElementById(`lesson-icon-${chapterIndex}-${lessonIndex}`);

                if (lessonDiv.style.display === 'none' || lessonDiv.style.display === '') {
                    lessonDiv.style.display = 'block';
                    icon.className = 'fas fa-chevron-up'; // Up arrow icon
                } else {
                    lessonDiv.style.display = 'none';
                    icon.className = 'fas fa-chevron-down'; // Down arrow icon
                }
            }

            </script>
        <script>
            function deleteChapter(chapterIndex, chapterID) {
                Swal.fire({
                    title: 'Bạn có chắc chắn muốn xóa chương này không?',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Có, xóa nó!',
                    cancelButtonText: 'Không, hủy!',
                    reverseButtons: true,
                    customClass: {
                        popup: 'swal-custom-popup',
                        title: 'swal-custom-title',
                        confirmButton: 'swal-custom-confirm',
                        cancelButton: 'swal-custom-cancel'
                    }
                }).then((result) => {
                    if (result.isConfirmed) {
                        fetch(`/Admin/Course/DeleteChapter/${chapterID}`, {
                            method: 'DELETE'
                        })
                            .then(response => {
                                if (response.ok) {
                                    document.getElementById(`lesson-form-${chapterIndex}-${lessonIndex}`).remove();
                                    Swal.fire({
                                        title: 'Xóa thành công!',
                                        text: 'Chương đã được xóa.',
                                        icon: 'success',
                                        customClass: {
                                            popup: 'swal-custom-popup',
                                            title: 'swal-custom-title',
                                            confirmButton: 'swal-custom-confirm'
                                        }
                                    });
                                } else {
                                    Swal.fire({
                                        title: 'Lỗi!',
                                        text: 'Xóa chương không thành công.',
                                        icon: 'error',
                                        customClass: {
                                            popup: 'swal-custom-popup',
                                            title: 'swal-custom-title',
                                            confirmButton: 'swal-custom-confirm'
                                        }
                                    });
                                }
                            })
                            .catch(error => {
                                console.error('Error:', error);
                                Swal.fire({
                                    title: 'Lỗi!',
                                    text: 'Đã xảy ra lỗi trong quá trình xóa.',
                                    icon: 'error',
                                    customClass: {
                                        popup: 'swal-custom-popup',
                                        title: 'swal-custom-title',
                                        confirmButton: 'swal-custom-confirm'
                                    }
                                });
                            });
                    }
                });
            }
            function deleteLesson(chapterIndex, lessonIndex, lessonID) {
                Swal.fire({
                    title: 'Bạn có chắc chắn muốn xóa bài học này không?',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Có, xóa nó!',
                    cancelButtonText: 'Không, hủy!',
                    reverseButtons: true,
                    customClass: {
                        popup: 'swal-custom-popup',
                        title: 'swal-custom-title',
                        confirmButton: 'swal-custom-confirm',
                        cancelButton: 'swal-custom-cancel'
                    }
                }).then((result) => {
                    if (result.isConfirmed) {
                        fetch(`/Admin/Course/DeleteLesson/${lessonID}`, {
                            method: 'DELETE'
                        })
                            .then(response => {
                                if (response.ok) {
                                    document.getElementById(`lesson-form-${chapterIndex}-${lessonIndex}`).remove();
                                    Swal.fire({
                                        title: 'Xóa thành công!',
                                        text: 'Bài học đã được xóa.',
                                        icon: 'success',
                                        customClass: {
                                            popup: 'swal-custom-popup',
                                            title: 'swal-custom-title',
                                            confirmButton: 'swal-custom-confirm'
                                        }
                                    });
                                } else {
                                    Swal.fire({
                                        title: 'Lỗi!',
                                        text: 'Xóa bài học không thành công.',
                                        icon: 'error',
                                        customClass: {
                                            popup: 'swal-custom-popup',
                                            title: 'swal-custom-title',
                                            confirmButton: 'swal-custom-confirm'
                                        }
                                    });
                                }
                            })
                            .catch(error => {
                                console.error('Error:', error);
                                Swal.fire({
                                    title: 'Lỗi!',
                                    text: 'Đã xảy ra lỗi trong quá trình xóa.',
                                    icon: 'error',
                                    customClass: {
                                        popup: 'swal-custom-popup',
                                        title: 'swal-custom-title',
                                        confirmButton: 'swal-custom-confirm'
                                    }
                                });
                            });
                    }
                });
            }
        </script>
        <script>
            let chapterCount = document.querySelectorAll('.chapter-form').length;

            function addChapter() {
                const chapterContainer = document.getElementById('chaptersContainer');
                const chapterIndex = chapterCount;

                const chapterCard = document.createElement('div');
                chapterCard.classList.add('chapter-form');
                chapterCard.setAttribute('id', `chapter-form-${chapterIndex}`);
                chapterCard.innerHTML = `
                    <div class="col-span-full">
                        <h4 class="cursor-pointer mb-2 text-sm font-medium leading-6 text-mainblack" onclick="toggleChapter(${chapterIndex})" style="display: flex; justify-content: space-between; align-items: center;">
                            Chương ${chapterIndex + 1}
                            <div>
                                <button type="button" onclick="toggleChapter(${chapterIndex})" class="ml-2">
                                    <i id="icon-${chapterIndex}" class="fas fa-chevron-up"></i>
                                </button>
                                <button type="button" onclick="deleteChapter(${chapterIndex})" class="ml-2 text-red-600">
                                    <i class="fas fa-trash-alt"></i>
                                </button>
                            </div>
                        </h4>
                        <div id="chapter-${chapterIndex}" style="display: block;">
                            <input type="hidden" name="Chapters[${chapterIndex}].ChapterID" value="0" />
                            <input type="hidden" name="Chapters[${chapterIndex}].Index" value="${chapterIndex}" />
                            <label for="ChapterTitle-${chapterIndex}" class="block mb-2 text-sm font-medium leading-6 text-mainblack">Tên chương *</label>
                            <input type="text" id="ChapterTitle-${chapterIndex}" name="Chapters[${chapterIndex}].Title" class="w-full px-4 py-2 text-sm border rounded-lg text-mainblack placeholder:text-sm focus:ring-0 focus:border-primary h-11 border-slate-200 placeholder:text-slate-600" placeholder="Tên chương" />
                            <div class="button-container mt-4">
                                <button type="button" onclick="addLesson(${chapterIndex})" class="px-12 py-3 text-sm font-medium leading-6 text-center text-white transition border rounded-lg hover:bg-opacity-80 bg-primary sm:text-base">
                                    Thêm bài học
                                </button>
                            </div>
                            <div id="lessonsContainer-${chapterIndex}" class="lessons-container mt-4">
                                <!-- Lesson cards will be dynamically added here -->
                            </div>
                        </div>
                    </div>
                `;

                chapterContainer.appendChild(chapterCard);
                chapterCount++;
            }

            function addLesson(chapterIndex) {
                const lessonContainer = document.getElementById(`lessonsContainer-${chapterIndex}`);
                const lessonCount = lessonContainer.children.length;

                const lessonCard = document.createElement('div');
                lessonCard.classList.add('lesson-form');
                lessonCard.setAttribute('id', `lesson-form-${chapterIndex}-${lessonCount}`);
                lessonCard.innerHTML = `
                    <div class="col-span-full">
                        <div class="flex justify-between items-center">
                            <label for="LessonTitle-${chapterIndex}-${lessonCount}" class="block mb-2 text-sm font-medium leading-6 text-mainblack">Tên bài học</label>
                            <div>
                                <button type="button" onclick="toggleLesson(${chapterIndex}, ${lessonCount})" class="ml-2">
                                    <i id="lesson-icon-${chapterIndex}-${lessonCount}" class="fas fa-chevron-up"></i>
                                </button>
                                <button type="button" onclick="deleteLesson(${chapterIndex}, ${lessonCount})" class="ml-2 text-red-600">
                                    <i class="fas fa-trash-alt"></i>
                                </button>
                            </div>
                        </div>
                        <div id="lesson-${chapterIndex}-${lessonCount}" style="display: block;">
                            <input type="hidden" name="Chapters[${chapterIndex}].Lessons[${lessonCount}].LessonID" value="0" />
                            <input type="hidden" name="Chapters[${chapterIndex}].Lessons[${lessonCount}].Index" value="${lessonCount}" />
                            <label for="LessonTitle-${chapterIndex}-${lessonCount}" class="block mb-2 text-sm font-medium leading-6 text-mainblack">Tên bài học</label>
                            <input type="text" id="LessonTitle-${chapterIndex}-${lessonCount}" name="Chapters[${chapterIndex}].Lessons[${lessonCount}].Title" class="w-full px-4 py-2 text-sm border rounded-lg text-mainblack placeholder:text-sm focus:ring-0 focus:border-primary h-11 border-slate-200 placeholder:text-slate-600" placeholder="Tên bài học" />
                            <label for="LessonDescription-${chapterIndex}-${lessonCount}" class="block mt-4 mb-2 text-sm font-medium leading-6 text-mainblack">Mô tả bài học</label>
                            <input type="text" id="LessonDescription-${chapterIndex}-${lessonCount}" name="Chapters[${chapterIndex}].Lessons[${lessonCount}].Description" class="w-full px-4 py-2 text-sm border rounded-lg text-mainblack placeholder:text-sm focus:ring-0 focus:border-primary h-11 border-slate-200 placeholder:text-slate-600" placeholder="Mô tả bài học" />
                            <label for="LessonVideoFile-${chapterIndex}-${lessonCount}" class="block mt-4 mb-2 text-sm font-medium leading-6 text-mainblack">Chọn Video</label>
                            <input type="file" id="LessonVideoFile-${chapterIndex}-${lessonCount}" name="Chapters[${chapterIndex}].Lessons[${lessonCount}].VideoFile" class="w-full px-4 py-2 text-sm border rounded-lg text-mainblack placeholder:text-sm focus:ring-0 focus:border-primary h-11 border-slate-200 placeholder:text-slate-600" accept=".mp4" />
                            <label for="LessonContentType-${chapterIndex}-${lessonCount}" class="block mt-4 mb-2 text-sm font-medium leading-6 text-mainblack">Loại nội dung</label>
                            <select id="LessonContentType-${chapterIndex}-${lessonCount}" name="Chapters[${chapterIndex}].Lessons[${lessonCount}].ContentType" class="w-full px-4 py-2 text-sm border rounded-lg text-mainblack placeholder:text-sm focus:ring-0 focus:border-primary h-11 border-slate-200 placeholder:text-slate-600">
                                <option value="Video">Video</option>
                                <option value="PDF">PDF</option>
                                <option value="Text">Text</option>
                                <option value="Audio">Audio</option>
                            </select>
                        </div>
                    </div>
                `;

                lessonContainer.appendChild(lessonCard);
            }

            // Function to toggle the visibility of a chapter
            function toggleChapter(chapterIndex) {
                const chapterDiv = document.getElementById(`chapter-${chapterIndex}`);
                const icon = document.getElementById(`icon-${chapterIndex}`);

                if (chapterDiv.style.display === 'none' || chapterDiv.style.display === '') {
                    chapterDiv.style.display = 'block';
                    icon.className = 'fas fa-chevron-up';
                } else {
                    chapterDiv.style.display = 'none';
                    icon.className = 'fas fa-chevron-down';
                }
            }

            // Function to toggle the visibility of a lesson
            function toggleLesson(chapterIndex, lessonIndex) {
                const lessonDiv = document.getElementById(`lesson-${chapterIndex}-${lessonIndex}`);
                const icon = document.getElementById(`lesson-icon-${chapterIndex}-${lessonIndex}`);

                if (lessonDiv.style.display === 'none' || lessonDiv.style.display === '') {
                    lessonDiv.style.display = 'block';
                    icon.className = 'fas fa-chevron-up';
                } else {
                    lessonDiv.style.display = 'none';
                    icon.className = 'fas fa-chevron-down';
                }
            }

            // Function to delete a chapter
            function deleteChapter(chapterIndex) {
                Swal.fire({
                    title: 'Bạn có chắc chắn muốn xóa chương này không?',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Có, xóa nó!',
                    cancelButtonText: 'Không, hủy!',
                    reverseButtons: true,
                    customClass: {
                        popup: 'swal-custom-popup',
                        title: 'swal-custom-title',
                        confirmButton: 'swal-custom-confirm',
                        cancelButton: 'swal-custom-cancel'
                    }
                }).then((result) => {
                    if (result.isConfirmed) {
                        document.getElementById(`chapter-form-${chapterIndex}`).remove();
                        Swal.fire('Đã xóa!', 'Chương đã được xóa.', 'success');
                    }
                });
            }

            // Function to delete a lesson
            function deleteLesson(chapterIndex, lessonIndex) {
                Swal.fire({
                    title: 'Bạn có chắc chắn muốn xóa bài học này không?',
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Có, xóa nó!',
                    cancelButtonText: 'Không, hủy!',
                    reverseButtons: true,
                    customClass: {
                        popup: 'swal-custom-popup',
                        title: 'swal-custom-title',
                        confirmButton: 'swal-custom-confirm',
                        cancelButton: 'swal-custom-cancel'
                    }
                }).then((result) => {
                    if (result.isConfirmed) {
                        document.getElementById(`lesson-form-${chapterIndex}-${lessonIndex}`).remove();
                        Swal.fire('Đã xóa!', 'Bài học đã được xóa.', 'success');
                    }
                });
            }

        </script>
    </div>
</div>
<!-- write your code here-->
<script>
    document.getElementById('courseForm').addEventListener('submit', function (event) {
        // Prevent form submission
        event.preventDefault();

        // Clear previous errors
        clearErrors();

        // Validate Step 1 (Course Information)
        let valid = true;

        const title = document.querySelector('[name="Title"]');
        const description = document.querySelector('[name="Description"]');
        const category = document.querySelector('[name="CategoryID"]');
        const price = document.querySelector('[name="Price"]');

        if (!title.value.trim()) {
            showError(title, "Tên khóa học là bắt buộc.");
            valid = false;
        }

        if (!description.value.trim()) {
            showError(description, "Mô tả khóa học là bắt buộc.");
            valid = false;
        }

        if (!category.value.trim()) {
            showError(category, "Thể loại là bắt buộc.");
            valid = false;
        }

        if (!price.value.trim() || isNaN(price.value) || parseFloat(price.value) <= 0) {
            showError(price, "Giá gốc phải là một số hợp lệ và lớn hơn 0.");
            valid = false;
        }

        // Validate Step 2 (Chapters and Lessons)
        const chapters = document.querySelectorAll('.chapter-form');
        chapters.forEach((chapter, chapterIndex) => {
            const chapterTitle = chapter.querySelector(`[name="Chapters[${chapterIndex}].Title"]`);
            if (!chapterTitle.value.trim()) {
                showError(chapterTitle, `Tên chương ${chapterIndex + 1} là bắt buộc.`);
                valid = false;
            }

            const lessons = chapter.querySelectorAll('.lesson-form');
            lessons.forEach((lesson, lessonIndex) => {
                const lessonTitle = lesson.querySelector(`[name="Chapters[${chapterIndex}].Lessons[${lessonIndex}].Title"]`);
                if (!lessonTitle.value.trim()) {
                    showError(lessonTitle, `Tên bài học ${lessonIndex + 1} trong chương ${chapterIndex + 1} là bắt buộc.`);
                    valid = false;
                }

                const lessonDescription = lesson.querySelector(`[name="Chapters[${chapterIndex}].Lessons[${lessonIndex}].Description"]`);
                if (!lessonDescription.value.trim()) {
                    showError(lessonDescription, `Mô tả bài học ${lessonIndex + 1} trong chương ${chapterIndex + 1} là bắt buộc.`);
                    valid = false;
                }
            });
        });

        // If everything is valid, submit the form
        if (valid) {
            this.submit();
        }
    });

    function showError(input, message) {
        const errorDiv = document.createElement('div');
        errorDiv.className = 'text-red-500 text-sm mt-1';
        errorDiv.innerText = message;
        input.parentNode.appendChild(errorDiv);
        input.classList.add('border-red-500');
    }

    function clearErrors() {
        const errors = document.querySelectorAll('.text-red-500');
        errors.forEach(error => error.remove());

        const errorInputs = document.querySelectorAll('.border-red-500');
        errorInputs.forEach(input => input.classList.remove('border-red-500'));
    }

</script>
<script>
    function nextStep(step) {
        // Hide current step
        const currentStep = document.querySelector('.form-step:not([style*="display: none"])');
        if (currentStep) {
            currentStep.style.display = 'none';
        }

        // Show next step
        document.getElementById('step-' + step).style.display = 'block';
    }

    function prevStep(step) {
        // Hide current step
        const currentStep = document.querySelector('.form-step:not([style*="display: none"])');
        if (currentStep) {
            currentStep.style.display = 'none';
        }

        // Show previous step
        document.getElementById('step-' + step).style.display = 'block';
    }

</script>
<script>
    const imgInput = document.getElementById('img-upload-input');
    const imgPreview = document.getElementById('img-preview');

    imgInput.addEventListener('change', function () {
        const file = this.files[0];
        if (file) {
            const reader = new FileReader();
            reader.onload = function (e) {
                imgPreview.src = e.target.result;
                imgPreview.classList.remove('hidden');
            };
            reader.readAsDataURL(file);
        }
    });

</script>