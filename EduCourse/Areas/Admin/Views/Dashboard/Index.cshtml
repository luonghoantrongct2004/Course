@using Newtonsoft.Json
@using Microsoft.AspNetCore.Identity
@inject UserManager<User> UserManager
@{
    var user = UserManager.GetUserAsync(User).Result;
    var students = ViewData["Student"] as List<User>;
    var courses = ViewData["Course"] as List<Course>;
    var exams = ViewData["Exam"] as List<Exam>;
    decimal earning = (decimal)ViewData["Order"];
}
 <!-- write your code here-->
<div class="p-7">
    <div class="max-w-md mb-7">
        <h2 class="text-xl text-mainblue">
            Welcome back, <span class="font-semibold"> @user.FullName!</span>
        </h2>
        <p class="text-sm text-slate-600">
            Quản lý nền tảng Lotus Academy
        </p>
    </div>
    <!-- Data Set -->
    <div class="grid grid-cols-1 gap-6 mb-6 sm:grid-cols-2 lg:grid-cols-2 xl:grid-cols-4">
        <!-- Single -->
        <div class="relative w-full p-5 bg-white rounded-lg xl:p-6">
            <div class="flex items-center justify-between mb-3">
                <div>
                    <h4 class="text-sm font-medium text-slate-700">
                        Tổng Học Sinh
                    </h4>
                </div>
                <div class="flex -space-x-2 overflow-hidden">
                    @foreach(var img in students.Take(3)){
                    <img class="inline-block w-6 h-6 rounded-full"
                         src="@img.Image"
                         alt="" />
                    } +
                </div>
            </div>
            <div class="flex items-center gap-3">
                <div class="inline-flex items-center justify-center w-12 h-12 rounded-full bg-primary/20">
                    <svg width="24"
                         height="24"
                         viewBox="0 0 24 24"
                         fill="none"
                         xmlns="http://www.w3.org/2000/svg">
                        <path fill-rule="evenodd"
                              clip-rule="evenodd"
                              d="M20.2379 10.6161V11.6028C20.2379 12.8291 19.2438 13.8232 18.0176 13.8232C16.7913 13.8232 15.7972 12.8291 15.7972 11.6028V10.6161L17.3412 11.3023C17.7718 11.4937 18.2633 11.4937 18.6939 11.3023L20.2379 10.6161ZM14.4095 9.99935V12.4355C14.4095 12.6655 14.2231 12.8519 13.9932 12.8519C13.7633 12.8519 13.5769 12.6655 13.5769 12.4355V9.62875C13.5819 9.63136 13.5871 9.63385 13.5924 9.63621L14.4095 9.99935Z"
                              fill="#8247FF" />
                        <path opacity="0.4"
                              d="M22.4427 9.129L18.6939 7.46286C18.2633 7.27149 17.7718 7.27149 17.3413 7.46286L13.5924 9.129C13.3727 9.22667 13.3727 9.53857 13.5924 9.63625L17.3413 11.3024C17.7718 11.4938 18.2633 11.4938 18.6939 11.3024L22.4427 9.63625C22.6625 9.53857 22.6625 9.22667 22.4427 9.129Z"
                              fill="#8247FF" />
                        <path opacity="0.4"
                              fill-rule="evenodd"
                              clip-rule="evenodd"
                              d="M16.3168 18.2639H21.3481C21.9612 18.2639 22.4583 17.7668 22.4583 17.1537C22.4583 15.9507 21.372 14.9162 19.8149 14.4583C19.6291 14.4036 19.4302 14.4623 19.294 14.6001L18.4122 15.4917C18.195 15.7114 17.8401 15.7114 17.6229 15.4917L16.7411 14.6001C16.6049 14.4623 16.406 14.4036 16.2202 14.4583C15.6747 14.6187 15.187 14.8499 14.7835 15.1343C15.7447 16.0138 16.3128 17.0949 16.3168 18.2639Z"
                              fill="#8247FF" />
                        <path opacity="0.4"
                              fill-rule="evenodd"
                              clip-rule="evenodd"
                              d="M11.7819 8.30872V9.81415C11.7819 11.6849 10.2654 13.2014 8.39464 13.2014C6.52393 13.2014 5.00742 11.6849 5.00742 9.81415V8.30872L7.36288 9.35559C8.01975 9.64753 8.76954 9.64753 9.4264 9.35559L11.7819 8.30872ZM2.89041 7.36783V11.0844C2.89041 11.4351 2.60606 11.7195 2.25531 11.7195C1.90455 11.7195 1.6202 11.4351 1.6202 11.0844V6.80246C1.62792 6.80644 1.63583 6.81024 1.64394 6.81384L2.89041 7.36783Z"
                              fill="#8247FF" />
                        <path d="M15.1453 6.04L9.42635 3.49825C8.76949 3.20631 8.01969 3.20631 7.36283 3.49825L1.64389 6.04C1.30863 6.189 1.30863 6.66482 1.64389 6.81382L7.36283 9.35557C8.01969 9.64751 8.76949 9.64751 9.42635 9.35557L15.1453 6.81382C15.4805 6.66482 15.4805 6.189 15.1453 6.04Z"
                              fill="#8247FF" />
                        <path d="M6.44735 14.3866L7.79253 15.7469C8.12397 16.082 8.66528 16.082 8.99673 15.7469L10.3419 14.3866C10.5497 14.1765 10.8531 14.087 11.1366 14.1703C13.512 14.8689 15.1691 16.4472 15.1691 18.2823C15.1691 19.2177 14.4108 19.9759 13.4755 19.9759H3.3138C2.37844 19.9759 1.62018 19.2177 1.62018 18.2823C1.62018 16.4472 3.27727 14.8689 5.65267 14.1703C5.93619 14.087 6.23955 14.1765 6.44735 14.3866Z"
                              fill="#8247FF" />
                    </svg>
                </div>
                <div>
                    <h4 class="mb-1 text-xl font-semibold leading-none text-mainblack">
                        @students.Count()
                    </h4>
                </div>
            </div>
        </div>
        <!-- Single -->
        <div class="relative w-full p-5 bg-white rounded-lg xl:p-6">
            <div class="flex items-center justify-between mb-3">
                <div>
                    <h4 class="text-sm font-medium text-slate-600">
                        Tổng Khóa Học
                    </h4>
                </div>
                <div class="flex -space-x-2 overflow-hidden">
                   @foreach(var c in courses.Take(3)){
                    <img class="inline-block w-6 h-6 rounded-full"
                         src="@c.Image"
                         alt="" />
                   } +
                </div>
            </div>
            <div class="flex items-center gap-3">
                <div class="inline-flex items-center justify-center w-12 h-12 rounded-full bg-blue-600/20">
                    <svg width="24"
                         height="24"
                         viewBox="0 0 24 24"
                         fill="none"
                         xmlns="http://www.w3.org/2000/svg">
                        <path fill-rule="evenodd"
                              clip-rule="evenodd"
                              d="M11.3168 5.42445C9.19313 3.93632 6.21271 3.26195 3.99433 3.01127C2.89642 2.88721 2 3.80402 2 4.93518V16.2C2 17.3311 2.89642 18.2483 3.99433 18.3723C6.21271 18.623 9.19313 19.2974 11.3168 20.7855C11.5209 20.9285 11.7605 21 12 21V5.63895C11.7605 5.63895 11.5209 5.56745 11.3168 5.42445ZM4.25894 8.13996C4.32234 7.73063 4.70556 7.45019 5.11489 7.51358C6.41767 7.71534 7.88481 8.05257 9.27061 8.58846C9.65695 8.73786 9.84902 9.17215 9.69963 9.55849C9.55023 9.94482 9.11594 10.1369 8.7296 9.9875C7.47096 9.50078 6.1141 9.18621 4.88532 8.99591C4.47599 8.93252 4.19555 8.5493 4.25894 8.13996ZM5.11489 11.5136C4.70556 11.4502 4.32234 11.7306 4.25894 12.14C4.19555 12.5493 4.47599 12.9325 4.88532 12.9959C5.50457 13.0918 6.15824 13.2196 6.81663 13.3857C7.21826 13.487 7.62599 13.2436 7.72732 12.8419C7.82865 12.4403 7.58521 12.0326 7.18358 11.9313C6.47457 11.7524 5.77462 11.6158 5.11489 11.5136Z"
                              fill="#8247FF" />
                        <path opacity="0.4"
                              d="M12.6832 5.42445C14.8069 3.93632 17.7873 3.26195 20.0057 3.01127C21.1036 2.88721 22 3.80402 22 4.93518V16.2C22 17.3311 21.1036 18.2483 20.0057 18.3723C17.7873 18.623 14.8069 19.2974 12.6832 20.7855C12.4791 20.9285 12.2395 21 12 21V5.63895C12.2395 5.63895 12.4791 5.56745 12.6832 5.42445Z"
                              fill="#8247FF" />
                    </svg>
                </div>
                <div>
                    <h4 class="mb-1 text-xl font-semibold leading-none text-mainblack">
                        @courses.Count()
                    </h4>
                </div>
            </div>
        </div>
        <!-- Single -->
        <div class="relative w-full p-5 bg-white rounded-lg xl:p-6">
            <div class="flex items-center justify-between mb-3">
                <div>
                    <h4 class="text-sm font-medium text-slate-700">
                        Tổng Bài Thi
                    </h4>
                </div>
            </div>
            <div class="flex items-center gap-3">
                <div class="inline-flex items-center justify-center w-12 h-12 rounded-full bg-primary/20">
                    <svg width="24"
                         height="24"
                         viewBox="0 0 24 24"
                         fill="none"
                         xmlns="http://www.w3.org/2000/svg">
                        <path opacity="0.4"
                              d="M4 5C4 3.34315 5.34315 2 7 2H17C18.6569 2 20 3.34315 20 5V19C20 20.6569 18.6569 22 17 22H7C5.34315 22 4 20.6569 4 19V5Z"
                              fill="#8247FF" />
                        <path d="M10 7.61799C10 6.87461 10.7823 6.39111 11.4472 6.72356L14.2111 8.10553C14.9482 8.47405 14.9482 9.52586 14.2111 9.89438L11.4472 11.2763C10.7823 11.6088 10 11.1253 10 10.3819V7.61799Z"
                              fill="#8247FF" />
                        <path d="M4 19C4 17.3431 5.34315 16 7 16H20V19C20 20.6569 18.6569 22 17 22H7C5.34315 22 4 20.6569 4 19Z"
                              fill="#8247FF" />
                    </svg>
                </div>
                <div>
                    <h4 class="mb-1 text-xl font-semibold leading-none text-mainblack">
                        @exams.Count
                    </h4>
                </div>
            </div>
        </div>
        <!-- Single -->
        <div class="relative w-full p-5 bg-white rounded-lg xl:p-6">
            <div class="flex items-center justify-between mb-3">
                <div>
                    <h4 class="text-sm font-medium text-slate-700">
                        Tổng Thu Nhập
                    </h4>
                </div>
            </div>
            <div class="flex items-center gap-3">
                <div class="inline-flex items-center justify-center w-12 h-12 rounded-full bg-yellow-500/20">
                    <svg width="24"
                         height="24"
                         viewBox="0 0 24 24"
                         fill="none"
                         xmlns="http://www.w3.org/2000/svg">
                        <path opacity="0.4"
                              d="M14.0859 6L9.91411 6L8.51303 4.39296C7.13959 2.81763 8.74185 0.462976 10.7471 1.10985L11.6748 1.40914C11.8861 1.47728 12.1139 1.47728 12.3252 1.40914L13.2529 1.10985C15.2582 0.462977 16.8604 2.81763 15.487 4.39296L14.0859 6Z"
                              fill="#EAB308" />
                        <path opacity="0.4"
                              d="M5.68429 10.2103C6.46705 7.7055 8.78686 6 11.4112 6H12.5889C15.2132 6 17.533 7.7055 18.3158 10.2104L19.5658 14.2104C20.7731 18.0739 17.8867 22 13.8389 22H10.1612C6.11332 22 3.22692 18.0739 4.43429 14.2104L5.68429 10.2103Z"
                              fill="#EAB308" />
                        <path fill-rule="evenodd"
                              clip-rule="evenodd"
                              d="M12 8.75C12.4142 8.75 12.75 9.08579 12.75 9.5V10.3462C13.856 10.6338 14.75 11.5427 14.75 12.75C14.75 13.1642 14.4142 13.5 14 13.5C13.5858 13.5 13.25 13.1642 13.25 12.75C13.25 12.2887 12.7876 11.75 12 11.75C11.2124 11.75 10.75 12.2887 10.75 12.75C10.75 13.2113 11.2124 13.75 12 13.75C13.4216 13.75 14.75 14.7783 14.75 16.25C14.75 17.4573 13.856 18.3662 12.75 18.6538V19.5C12.75 19.9142 12.4142 20.25 12 20.25C11.5858 20.25 11.25 19.9142 11.25 19.5V18.6538C10.144 18.3662 9.25 17.4573 9.25 16.25C9.25 15.8358 9.58579 15.5 10 15.5C10.4142 15.5 10.75 15.8358 10.75 16.25C10.75 16.7113 11.2124 17.25 12 17.25C12.7876 17.25 13.25 16.7113 13.25 16.25C13.25 15.7887 12.7876 15.25 12 15.25C10.5784 15.25 9.25 14.2217 9.25 12.75C9.25 11.5427 10.144 10.6338 11.25 10.3462V9.5C11.25 9.08579 11.5858 8.75 12 8.75Z"
                              fill="#EAB308" />
                        <path d="M15.375 19.875C15.375 18.9775 16.1025 18.25 17 18.25H21.875C22.7725 18.25 23.5 18.9775 23.5 19.875C23.5 20.7725 22.7725 21.5 21.875 21.5H17C16.1025 21.5 15.375 20.7725 15.375 19.875Z"
                              fill="#EAB308" />
                        <path d="M15.375 16.625C15.375 15.7275 16.1025 15 17 15H21.3333H21.875C22.7725 15 23.5 15.7275 23.5 16.625C23.5 17.5225 22.7725 18.25 21.875 18.25H17C16.1025 18.25 15.375 17.5225 15.375 16.625Z"
                              fill="#EAB308" />
                    </svg>
                </div>
                <div>
                    <h4 class="mb-1 text-xl font-semibold leading-none text-mainblack">
                        @earning.ToString("N0") đ
                    </h4>
                </div>
            </div>
        </div>
    </div>
    <div class="grid grid-cols-1 gap-6 mb-6 xl:grid-cols-12">
        <div class="xl:col-span-12">
            <div class="block h-full p-5 overflow-hidden bg-white rounded-lg">
                <div class="flex flex-col items-center justify-between gap-4 mb-5 sm:flex-row">
                    <div class="shrink-0">
                        <h3 class="text-xl font-semibold text-mainblack">
                            Tổng quát
                        </h3>
                    </div>
                    <div class="flex items-center gap-5">
                        <span class="relative flex items-center gap-3 text-sm text-slate-600">
                            <span class="bg-primary w-2.5 h-2.5 block rounded-full"></span>
                            Giáo viên
                        </span><span class="relative flex items-center gap-3 text-sm text-slate-600">
                            <span class="bg-violet-400 w-2.5 h-2.5 block rounded-full"></span>
                            Học sinh
                        </span><span class="relative flex items-center gap-3 text-sm text-slate-600">
                            <span class="bg-violet-300 w-2.5 h-2.5 block rounded-full"></span>
                            Quản trị viên
                        </span>
                    </div>
                </div>
                <div class="h-[250px]">
                    <canvas id="myChart4"></canvas>
                </div>
            </div>
        </div>
    </div>
    <!-- Transaction -->
    <div class="py-5 bg-white rounded-lg">
        <div class="flex items-center justify-between px-5">
            <h4 class="text-xl font-semibold text-slate-900">
                Đơn hàng
            </h4>
            <a href="/admin/order"
               class="inline-flex items-center justify-center gap-1 px-4 py-3 text-sm font-medium transition ease-in-out border rounded-lg border-slate-300 text-slate-500 hover:bg-violet-600 hover:text-blue-50 hover:border-transparent">
                Xem tất cả
                <svg width="20"
                     height="20"
                     viewBox="0 0 20 20"
                     fill="none"
                     xmlns="http://www.w3.org/2000/svg">
                    <path d="M12.8334 8.23334L9.00841 4.40834C8.85228 4.25313 8.64107 4.16602 8.42091 4.16602C8.20076 4.16602 7.98955 4.25313 7.83341 4.40834C7.75531 4.48581 7.69331 4.57798 7.651 4.67953C7.6087 4.78108 7.58691 4.89 7.58691 5.00001C7.58691 5.11002 7.6087 5.21894 7.651 5.32049C7.69331 5.42204 7.75531 5.51421 7.83341 5.59168L11.6667 9.40834C11.7449 9.48581 11.8068 9.57798 11.8492 9.67953C11.8915 9.78108 11.9132 9.89 11.9132 10C11.9132 10.11 11.8915 10.2189 11.8492 10.3205C11.8068 10.422 11.7449 10.5142 11.6667 10.5917L7.83341 14.4083C7.67649 14.5642 7.5879 14.7759 7.58712 14.9971C7.58633 15.2182 7.67343 15.4306 7.82925 15.5875C7.98506 15.7444 8.19683 15.833 8.41797 15.8338C8.6391 15.8346 8.85149 15.7475 9.00841 15.5917L12.8334 11.7667C13.3016 11.2979 13.5645 10.6625 13.5645 10C13.5645 9.33751 13.3016 8.70209 12.8334 8.23334Z"
                          fill="currentColor" />
                </svg>
            </a>
        </div>
        <div class="-m-1.5 overflow-x-auto">
            <div class="p-1.5 min-w-full inline-block align-middle">
                <div class="overflow-hidden">
                    <table class="min-w-full divide-y divide-slate-100">
                        <thead>
                            <tr>
                                <th scope="col"
                                    class="px-5 py-3 text-base font-medium capitalize text-start text-slate-900">
                                    Tên khách hàng
                                </th>
                                <th scope="col"
                                    class="px-4 py-3 text-base font-medium capitalize text-start text-slate-900">
                                    Khóa học
                                </th>
                                <th scope="col"
                                    class="px-5 py-3 text-base font-medium capitalize text-start text-slate-900">
                                    Giá
                                </th>
                                <th scope="col"
                                    class="px-4 py-3 text-base font-medium capitalize text-start text-slate-900">
                                    Phương thức thanh toán
                                </th>
                                <th scope="col"
                                    class="px-5 py-3 text-base font-medium capitalize text-start text-slate-900">
                                    Trạng thái
                                </th>
                                <th scope="col"
                                    class="px-5 py-3 text-base font-medium capitalize text-end text-slate-900">
                                    Action
                                </th>
                            </tr>
                        </thead>
                        <tbody class="divide-y divide-slate-100">
                            @{
                                var orders = ViewData["Orders"] as List<Order>;
                            }
                            @foreach (var item in orders.Take(4))
                            {
                                <tr class="transition hover:bg-slate-50">
                                    <td class="px-5 py-3 text-sm text-gray-800 whitespace-nowrap">
                                        <div class="flex items-center gap-2">
                                            <div class="hidden shrink-0 xl:block">
                                                <img src="@item.User.Image"
                                                class="w-10 h-10 rounded-full"
                                                alt="" />
                                            </div>
                                            <div>
                                                <h4 class="text-base font-medium leading-6 text-mainblack text-wrap sm:text-nowrap">
                                                    @item.User.FullName
                                                </h4
                                            </div>
                                        </div>
                                    </td>
                                    <td class="px-5 py-3 text-base font-normal whitespace-nowrap text-mainblack">
                                        @foreach(var d in item.OrderDetails)
                                        {
                                            <p>@d.Course.Title <br /></p>
                                        }
                                    </td>
                                    <td class="px-5 py-3 text-sm whitespace-nowrap text-slate-600">
                                        @foreach(var d in item.OrderDetails)
                                        {
                                            <p>@d.Course.Price.ToString("N0") <br /></p>
                                        }
                                    </td>
                                    <td class="px-5 py-3 text-sm whitespace-nowrap text-slate-600">
                                        <div class="flex items-center gap-1.5">
                                            <svg width="30"
                                            height="19"
                                            viewBox="0 0 30 19"
                                            fill="none"
                                            xmlns="http://www.w3.org/2000/svg">
                                                <g clip-path="url(#clip0_47_2448)">
                                                    <path d="M10.6562 2.42578H18.5572V16.581H10.6562V2.42578Z"
                                                    fill="#FF5F00" />
                                                    <path d="M11.1617 9.5033C11.1617 6.62729 12.5161 4.0763 14.5979 2.42566C13.068 1.22524 11.1367 0.5 9.02979 0.5C4.03821 0.5 0 4.52642 0 9.5033C0 14.4801 4.03821 18.5066 9.02968 18.5066C11.1366 18.5066 13.0679 17.7814 14.5979 16.5808C12.5161 14.9553 11.1617 12.3793 11.1617 9.5033Z"
                                                    fill="#EB001B" />
                                                    <path d="M29.2229 9.5033C29.2229 14.4801 25.1847 18.5066 20.1932 18.5066C18.0863 18.5066 16.155 17.7814 14.625 16.5808C16.7319 14.9303 18.0613 12.3793 18.0613 9.5033C18.0613 6.62729 16.7068 4.0763 14.625 2.42566C16.1549 1.22524 18.0863 0.5 20.1932 0.5C25.1847 0.5 29.2229 4.55148 29.2229 9.5033Z"
                                                    fill="#F79E1B" />
                                                </g>
                                                <defs>
                                                    <clipPath id="clip0_47_2448">
                                                        <rect width="29.25"
                                                        height="18"
                                                        fill="white"
                                                        transform="translate(0 0.5)" />
                                                    </clipPath>
                                                </defs>
                                            </svg>
                                            <p class="text-sm text-mainblack">@item.PaymentMethod</p>
                                        </div>
                                    </td>
                                    <td class="px-4 py-3 whitespace-nowrap">
                                        <span class="inline-block px-5 py-2 text-sm font-medium text-center text-green-600 bg-green-100 rounded-md">@item.PaymentStatus</span>
                                    </td>
                                    <td class="px-5 py-3 whitespace-nowrap">
                                        <div class="flex justify-end gap-2">
                                            <a href="/admin/order/Details?id=@item.OrderID"
                                            class="inline-flex items-center justify-center w-8 h-8 text-white rounded bg-primary">
                                                <svg width="20"
                                                height="21"
                                                viewBox="0 0 20 21"
                                                fill="none"
                                                xmlns="http://www.w3.org/2000/svg">
                                                    <path d="M17.6084 8.71075C18.5748 9.72748 18.5748 11.2722 17.6084 12.2889C15.9786 14.0037 13.1794 16.3332 9.99984 16.3332C6.82024 16.3332 4.02108 14.0037 2.39126 12.2889C1.42492 11.2722 1.42492 9.72748 2.39126 8.71075C4.02108 6.99595 6.82024 4.6665 9.99984 4.6665C13.1794 4.6665 15.9786 6.99595 17.6084 8.71075Z"
                                                    stroke="currentColor"
                                                    stroke-width="1.5" />
                                                    <path d="M12.4998 10.4998C12.4998 11.8805 11.3805 12.9998 9.99984 12.9998C8.61913 12.9998 7.49984 11.8805 7.49984 10.4998C7.49984 9.11913 8.61913 7.99984 9.99984 7.99984C11.3805 7.99984 12.4998 9.11913 12.4998 10.4998Z"
                                                    stroke="currentColor"
                                                    stroke-width="1.5" />
                                                </svg>
                                            </a>
                                        </div>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- write your code here-->
<!-- layout end -->
<!--scripts -->
<script src="~/admin/assets/js/jquery-3.6.0.min.js"></script>
<script src="~/admin/assets/js/chart.js"></script>
<script src="~/admin/assets/js/chartjs-plugin-annotation.min.js"></script>
<script src="~/admin/assets/js/full-calendar.js"></script>
<script>
    // Lấy dữ liệu từ ViewBag.ChartData (được truyền từ backend)
    var chartData = @Html.Raw(JsonConvert.SerializeObject(ViewBag.ChartData));

    // Hàm kiểm tra và gán giá trị mặc định nếu không có dữ liệu
    function getValidData(data, index) {
        return data !== undefined && data !== null && data[index] !== undefined ? data[index] : 0; // Trả về 0 nếu dữ liệu không tồn tại
    }

    var ctx = document.getElementById("myChart4").getContext("2d");
    var myChart = new Chart(ctx, {
        type: "bar",
        data: {
            // Nhãn cho 12 tháng
            labels: ["Tháng 1", "Tháng 2", "Tháng 3", "Tháng 4", "Tháng 5", "Tháng 6", "Tháng 7", "Tháng 8", "Tháng 9", "Tháng 10", "Tháng 11", "Tháng 12"],
            datasets: [
                {
                    label: "Giáo viên",
                    barThickness: 24,
                    backgroundColor: "#8B5CF6",
                    // Sử dụng giá trị hợp lệ cho từng tháng
                    data: [
                        getValidData(chartData.instructors, 0),
                        getValidData(chartData.instructors, 1),
                        getValidData(chartData.instructors, 2),
                        getValidData(chartData.instructors, 3),
                        getValidData(chartData.instructors, 4),
                        getValidData(chartData.instructors, 5),
                        getValidData(chartData.instructors, 6),
                        getValidData(chartData.instructors, 7),
                        getValidData(chartData.instructors, 8),
                        getValidData(chartData.instructors, 9),
                        getValidData(chartData.instructors, 10),
                        getValidData(chartData.instructors, 11)
                    ],
                },
                {
                    label: "Học sinh",
                    barThickness: 24,
                    backgroundColor: "#A78BFA",
                    data: [
                        getValidData(chartData.students, 0),
                        getValidData(chartData.students, 1),
                        getValidData(chartData.students, 2),
                        getValidData(chartData.students, 3),
                        getValidData(chartData.students, 4),
                        getValidData(chartData.students, 5),
                        getValidData(chartData.students, 6),
                        getValidData(chartData.students, 7),
                        getValidData(chartData.students, 8),
                        getValidData(chartData.students, 9),
                        getValidData(chartData.students, 10),
                        getValidData(chartData.students, 11)
                    ],
                },
                {
                    label: "Quản trị viên",
                    barThickness: 24,
                    backgroundColor: "#F8FAFC",
                    data: [
                        getValidData(chartData.others, 0),
                        getValidData(chartData.others, 1),
                        getValidData(chartData.others, 2),
                        getValidData(chartData.others, 3),
                        getValidData(chartData.others, 4),
                        getValidData(chartData.others, 5),
                        getValidData(chartData.others, 6),
                        getValidData(chartData.others, 7),
                        getValidData(chartData.others, 8),
                        getValidData(chartData.others, 9),
                        getValidData(chartData.others, 10),
                        getValidData(chartData.others, 11)
                    ],
                },
            ],
        },
        options: {
            tooltips: {
                displayColors: true,
                callbacks: {
                    mode: "x",
                },
            },
            scales: {
                x: {
                    stacked: true,
                    border: {
                        display: false,
                        dash: [4, 8],
                    },
                    grid: {
                        display: false,
                    },
                    ticks: {
                        font: {
                            weight: "500", // Set font weight
                            color: "#475569", // Set font color
                        },
                    },
                },
                y: {
                    stacked: true,
                    border: {
                        display: false,
                        dash: [4, 6],
                    },
                    grid: {
                        display: true,
                        borderWidth: 2,
                        color: "#CBD5E1",
                    },
                    min: 0,
                    max: 80,
                    ticks: {
                        callback: (value, index, ticks) => {
                            if (value === 0) {
                                return "00";
                            } else if (value % 20 === 0) {
                                return value;
                            }
                        },
                        color: "#64748B",
                    },
                },
            },
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                annotation: {
                    annotations: {
                        point1: {
                            type: "point",
                            xValue: 3,
                            yValue: 60,
                            backgroundColor: "#ffff",
                            borderColor: "#8B5CF6",
                            borderWidth: 3,
                            radius: 4,
                        },
                    },
                    drawTime: "afterDatasetsDraw",
                },
                legend: {
                    position: "top",
                    display: false,
                    labels: {
                        usePointStyle: true,
                        pointStyle: "circle",
                        color: "#475569",
                        size: 14,
                    },
                },
            },
        },
    });
</script>
<script>
    function updateChartData(selectedYear) {
    // Gọi API lấy dữ liệu theo năm
    fetch(`/admin/role/GetChartDataByYear?year=${selectedYear}`)
        .then(response => response.json())
        .then(data => {
            // Cập nhật dữ liệu cho biểu đồ
            myChart.data.datasets[0].data = [
                getValidData(data.instructors, 0),
                getValidData(data.instructors, 1),
                getValidData(data.instructors, 2),
                getValidData(data.instructors, 3),
                getValidData(data.instructors, 4),
                getValidData(data.instructors, 5),
                getValidData(data.instructors, 6),
                getValidData(data.instructors, 7),
                getValidData(data.instructors, 8),
                getValidData(data.instructors, 9),
                getValidData(data.instructors, 10),
                getValidData(data.instructors, 11)
            ];

            myChart.data.datasets[1].data = [
                getValidData(data.students, 0),
                getValidData(data.students, 1),
                getValidData(data.students, 2),
                getValidData(data.students, 3),
                getValidData(data.students, 4),
                getValidData(data.students, 5),
                getValidData(data.students, 6),
                getValidData(data.students, 7),
                getValidData(data.students, 8),
                getValidData(data.students, 9),
                getValidData(data.students, 10),
                getValidData(data.students, 11)
            ];

            myChart.data.datasets[2].data = [
                getValidData(data.others, 0),
                getValidData(data.others, 1),
                getValidData(data.others, 2),
                getValidData(data.others, 3),
                getValidData(data.others, 4),
                getValidData(data.others, 5),
                getValidData(data.others, 6),
                getValidData(data.others, 7),
                getValidData(data.others, 8),
                getValidData(data.others, 9),
                getValidData(data.others, 10),
                getValidData(data.others, 11)
            ];

            // Cập nhật lại biểu đồ
            myChart.update();
        })
        .catch(error => {
            console.error('Error fetching chart data:', error);
        });
}

</script>
<script>
    const studentAnalysisChart =
        document.querySelectorAll(".studentAnalysis");
    studentAnalysisChart.forEach((chart) => {
        const ctx_bids = chart.getContext("2d");
        const labels = [
            "",
            "Jan",
            "Feb",
            "Mar",
            "Apr",
            "May",
            "Jun",
            "July",
            "Aug",
            "Sep",
            "Oct",
            "Nov",
            "Dec",
            "",
        ];
        const data = {
            labels: labels,
            datasets: [
                {
                    label: false,
                    data: [
                        40, 30, 60, 30, 40, 25, 55, 40, 45, 30, 40, 20, 30, 0, 0, 0,
                    ],
                    borderColor: "#8247FF",
                    pointStyle: false,
                    borderWidth: 1.5,
                    fill: true, // Fill under the line
                    backgroundColor: "rgba(130, 71, 255, 0.15)", // Fill color
                    tension: 0.0,
                    type: "line",
                },
                {
                    label: false,
                    data: [0, 0, 60, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], // Extend data to fill the end
                    borderWidth: 0,
                    stack: "",
                    backgroundColor: () => {
                        const gradient = ctx_bids.createLinearGradient(0, 0, 0, 450);
                        gradient.addColorStop(0.2, "rgba(139, 92, 246, 1)");
                        gradient.addColorStop(0.7, "rgba(139, 92, 246, 0)");
                        return gradient;
                    },
                    type: "bar",
                    barThickness: 24,
                },
            ],
        };
        const config = {
            type: "line",
            data: data,
            options: {
                layout: {},
                maintainAspectRatio: false,
                showAllTooltips: true,
                tooltips: {
                    displayColors: true,
                    callbacks: {
                        mode: "x",
                    },
                },
                scales: {
                    x: {
                        border: {
                            display: false,
                            dash: [4, 8],
                            color: "#E2E8F0",
                            pointStyle: false,
                        },
                        grid: {
                            dash: [4, 8],
                            color: "#E2E8F0",
                        },
                        min: 1,
                        max: 12.4,
                        barThickness: 0.1, // number (pixels) or 'flex'
                        maxBarThickness: 0.1,
                        ticks: {
                            color: "#64748B",
                        },
                    },
                    y: {
                        border: {
                            dash: [4, 8],
                            display: false,
                        },
                        grid: {
                            dash: [4, 8],
                            color: "#E2E8F0",
                        },
                        ticks: {
                            callback: (value, index, ticks) => {
                                if (value === 0) {
                                    return "00";
                                } else if (value % 20 === 0) {
                                    return value;
                                }
                            },
                            color: "#475569",
                        },
                        min: 0,
                        max: 80,
                    },
                },
                plugins: {
                    legend: {
                        position: "top",
                        display: false,
                    },
                    annotation: {
                        annotations: {
                            point1: {
                                type: "point",
                                xValue: 2,
                                yValue: 60,
                                backgroundColor: "#ffff",
                                borderColor: "#8B5CF6",
                                borderWidth: 3,
                                radius: 4,
                            },
                        },
                        drawTime: "afterDatasetsDraw",
                    },
                },
            },
        };

        // Set canvas width to parent container width
        chart.width = chart.parentNode.clientWidth;

        const myChart = new Chart(ctx_bids, config);
    });
</script>

<script src="~/admin/assets/js/main.js"></script>